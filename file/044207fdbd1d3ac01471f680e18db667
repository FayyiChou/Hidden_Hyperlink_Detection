<!DOCTYPE HTML>
<html class="no-js">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1">
    <meta name="renderer" content="webkit">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>唯标 loson studio - www.uilogo.com</title>

    <!-- 使用url函数转换相关路径 -->
    <link rel="stylesheet" href="http://www.uilogo.com/usr/themes/deep/css/base.css">
    <link rel="stylesheet" href="http://www.uilogo.com/usr/themes/deep/css/style.css">
    <!-- 通过自有函数输出HTML头部信息 -->
    <meta name="description" content="Web前端开发，前端 • 设计 • 建站 • 分享，UI视觉设计开发 / LOGO设计" />
<meta name="keywords" content="Web前端开发，UI视觉设计，开发 ，LOGO设计" />
</head>
<body>
<!--[if lt IE 8]>
    <div class="browsehappy" role="dialog">当前网页 <strong>不支持</strong> 你正在使用的浏览器. 为了正常的访问, 请 <a href="http://browsehappy.com/">升级你的浏览器</a>.</div>
<![endif]-->
<div id="header">
    <div class="container">             
                <h1 class="h1-title">
                    <a href="http://www.uilogo.com/">
                         
                            <img src="http://www.uilogo.com/usr/themes/deep/images/logo.png" alt="唯标 loson studio - www.uilogo.com" />
                            
                    </a></h1>
                <div id="nav">
                 <input type="checkbox" id="button">
                    <label for="button" onclick>菜单</label>
                  <ul>
                        <li class="current"><a href="http://www.uilogo.com/">首页</a></li>
                                                                       <li><a href="http://www.uilogo.com/about.html">关于</a></li>
                                                 <li><a href="http://www.uilogo.com/download.html">下载</a></li>
                                           </ul>
                </div>
    </div>
</div>

    
    
 <div class="slider">
  <div class="banner-overlay"></div>
  <div class="container">
    <div class="row">
      <div class="col-10 columns">
        <div class="hero">
          <h2>唯标</h2>
          <p>www.uilogo.com </p>
          <mark class="mark">前端 • 设计 • 建站 • 分享</mark>
        </div>

      </div>

    </div>
  </div>
</div>
<div class="container">

	<div class="col-11 columns" id="mainbody">

 	    <!-- article -->
    <div class="post type-post" >

            <!-- post title -->
            <h2 class='loading-title' itemprop="name headline">
              <a itemtype="url" href="http://www.uilogo.com/archives/20.html" title="服务器×××上的MSDTC不可用解决办法">服务器×××上的MSDTC不可用解决办法</a>
            </h2>
            
<div class="details-up">
	<span class="author">作者: <a itemprop="name" href="http://www.uilogo.com/author/1/" rel="author">loson</a></span>

	  <!-- 分类页面category不显示 -->
  		<span class="category">分类: <a href="http://www.uilogo.com/category/IT-share/">技术分享</a></span>
		
	<span class="date">时间: 2016-05-13</span>
	<span class="comments-top" itemprop="interactionCount">评论: <a itemprop="discussionUrl" href="http://www.uilogo.com/archives/20.html#comments">暂无评论</a></span>
</div>

                <!-- /post details -->
           <!-- /post details -->
   			 <div class="entry"><p><span style="font-size: 12pt; font-family: 宋体;"><span style="font-size: 12pt;"><span style="font-size: 12pt;"><span style="font-size: 10pt;">MSDTC(分布式交易协调器)，协调跨多个数据库、消息队列、文件系统等资源管理器的事务。该服务的进程名为Msdtc.exe,该进程调用系统Microsoft Personal Web Server和Microsoft SQL Server。该服务用于管理多个服务器 .<br/>位置：控制面板－－管理工具－－服务－－Distributed Transaction Coordinator<br/></span></span></span></span><span style="font-size: 12pt; font-family: 宋体;"><span style="font-size: 12pt;"><span style="font-size: 10pt;">依存关系：<span style="font-size: 12pt;">Remote Procedure Call(RPC)和Security Accounts Manager&nbsp;</span><br/>建议：<span style="font-size: 10pt;">一般家用计算机涉及不到，除非你启用Message Queuing服务，可以停止。</span></span></span></span></p><p><span style="font-size: 12pt; font-family: 宋体;"><span style="font-size: 12pt;"><span style="font-size: 10pt;">解决办法:&nbsp;</span><span style="font-size: 14pt;"><span style="font-size: 12pt;"><span style="font-size: 10pt;">1. 在windows控制面版--&gt;管理工具--&gt;服务--&gt;Distributed Transaction Coordinator--&gt;属性--&gt;启动</span></span></span></span></span></p><p><span style="font-size: 12pt; font-family: 宋体;"><span style="font-size: 12pt;"><span style="font-size: 14pt;"><span style="font-size: 12pt;"><span style="font-size: 14pt;"><span style="font-size: 12pt;"><span style="font-size: 12pt;"><span style="font-size: 10pt;"><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: 10pt;">2.在CMD下运行&quot;net start msdtc&quot;开启服务后正常。</span></span></span></span></span></span></span></span></span></span></p><p style="font-size: 13px; margin: 10px auto; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 19.5px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(42, 42, 42); font-family: 宋体;"><span style="font-size: 12pt;">注</span>：<span style="font-size: 10pt;">如果在第1步Distributed&nbsp;Transaction&nbsp;Coordinator&nbsp;无法启动，则是因为丢失了日志文件,重新创建日志文件,再启动就行了。重新创建 MSDTC 日志,并重新启动服务的步骤如下：<br/>(1) 单击&quot;开始&quot;,单击&quot;运行&quot;,输入 cmd 后按&quot;确定&quot;。<br/>(2) 输入:msdtc -resetlog (注意运行此命令时,不要执行挂起的事务)<br/>(3) 最后输入:net start msdtc 回车,搞定!</span></span></p><p>转自：http://www.cnblogs.com/markhe/archive/2009/04/30/1447223.html</p>
</div>

 	 </div>
	    <!-- article -->
    <div class="post type-post" >

            <!-- post title -->
            <h2 class='loading-title' itemprop="name headline">
              <a itemtype="url" href="http://www.uilogo.com/archives/19.html" title="解决Web部署 svg/woff/woff2字体 404错误">解决Web部署 svg/woff/woff2字体 404错误</a>
            </h2>
            
<div class="details-up">
	<span class="author">作者: <a itemprop="name" href="http://www.uilogo.com/author/1/" rel="author">loson</a></span>

	  <!-- 分类页面category不显示 -->
  		<span class="category">分类: </span>
		
	<span class="date">时间: 2016-04-25</span>
	<span class="comments-top" itemprop="interactionCount">评论: <a itemprop="discussionUrl" href="http://www.uilogo.com/archives/19.html#comments">暂无评论</a></span>
</div>

                <!-- /post details -->
           <!-- /post details -->
   			 <div class="entry"><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">最近项目中用到了fontawesome-webfont.svg等字体。<span style="word-spacing: normal;">部署项目后，发现没有&lt;,+等符号，字体也不对，</span><span style="word-spacing: normal;">发现浏览器总是报找不到woff、woff2字体的错误。</span><span style="word-spacing: normal;"></span></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;"><strong>原因：</strong>因为服务器IIS不认SVG，WOFF/WOFF2 这几个文件类型，只要在IIS上添加MIME&nbsp;类型即可。<span style="word-spacing: normal;"></span></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;"><span style="word-spacing: normal;">IIS7 解决办法：&nbsp;</span>http://www.cnblogs.com/hanwen/p/4212622.html<span style="word-spacing: normal;"></span><br/></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;"><span style="word-spacing: normal;">IIS6解决办法：</span>http://blog.brain1981.com/682.html</p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">详细如下:</p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">1、打开服务器IIS管理器，找到MIME类型。</p><p><a href="http://photo.blog.sina.com.cn/showpic.html#blogid=&url=http://album.sina.com.cn/pic/001lyEsNgy6S3BNki7993" target="_blank" style="text-decoration: none; outline: 0px; color: rgb(153, 153, 153);"><img src="http://s4.sinaimg.cn/mw690/001lyEsNgy6S3BNki7993" real_src="http://s4.sinaimg.cn/mw690/001lyEsNgy6S3BNki7993" alt="" title="" action-data="http%3A%2F%2Fs4.sinaimg.cn%2Fmw690%2F001lyEsNgy6S3BNki7993" action-type="show-slide" style="border: 0px; vertical-align: middle; max-width: 100%;"/></a></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">2、添加MIME类型 添加三条：　　</p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>文件扩展名</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>MIME类型</strong>　</p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">.svg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image/svg+xmz</p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">.woff &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="word-spacing: normal;">application/x-font-woff</span></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;"><span style="word-spacing: normal;"></span><span style="word-spacing: normal;">.woff2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; application/x-font-woff</span></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;"><em>注：本文在win8环境下IIS7版本中填写的MIME类型</em></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;"><em>IIS 6:</em></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">打开IIS，找到网站，右键属性，打开“HTTP头”，找到右下角的“MIME类型…”</p><p><a href="http://photo.blog.sina.com.cn/showpic.html#blogid=&url=http://album.sina.com.cn/pic/001lyEsNgy6S3C4QnkJ01" target="_blank" style="text-decoration: none; outline: 0px; color: rgb(153, 153, 153);"><img src="http://s2.sinaimg.cn/mw690/001lyEsNgy6S3C4QnkJ01" real_src="http://s2.sinaimg.cn/mw690/001lyEsNgy6S3C4QnkJ01" alt="" title="" action-data="http%3A%2F%2Fs2.sinaimg.cn%2Fmw690%2F001lyEsNgy6S3C4QnkJ01" action-type="show-slide" style="border: 0px; vertical-align: middle; max-width: 100%;"/></a></p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">新建如下3条：</p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">.svg image/svg+xml</p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">.woff application/x-font-woff</p><p style="margin-top: 0px; margin-bottom: 22px; padding: 0px; color: rgb(51, 51, 51); font-family: &#39;Microsoft Yahei&#39;, Simsun; font-size: 17px; line-height: 28px; white-space: normal;">.woff2 application/x-font-woff</p><p><a href="http://photo.blog.sina.com.cn/showpic.html#blogid=&url=http://album.sina.com.cn/pic/001lyEsNgy6S3C5quuk50" target="_blank" style="text-decoration: none; outline: 0px; color: rgb(153, 153, 153);"><img src="http://s1.sinaimg.cn/mw690/001lyEsNgy6S3C5quuk50" real_src="http://s1.sinaimg.cn/mw690/001lyEsNgy6S3C5quuk50" alt="" title="" action-data="http%3A%2F%2Fs1.sinaimg.cn%2Fmw690%2F001lyEsNgy6S3C5quuk50" action-type="show-slide" style="border: 0px; vertical-align: middle; max-width: 100%;"/></a><a style="outline: 0px; color: rgb(153, 153, 153);">&nbsp;</a></p><p><br/></p><p>转自http://blog.sina.com.cn/s/blog_4997f1b90102vkjn.html</p>
</div>

 	 </div>
	    <!-- article -->
    <div class="post type-post" >

            <!-- post title -->
            <h2 class='loading-title' itemprop="name headline">
              <a itemtype="url" href="http://www.uilogo.com/archives/18.html" title="SQL Server调优系列基础篇（常用运算符总结——三种物理连接方式剖析）">SQL Server调优系列基础篇（常用运算符总结——三种物理连接方式剖析）</a>
            </h2>
            
<div class="details-up">
	<span class="author">作者: <a itemprop="name" href="http://www.uilogo.com/author/1/" rel="author">loson</a></span>

	  <!-- 分类页面category不显示 -->
  		<span class="category">分类: <a href="http://www.uilogo.com/category/IT-share/">技术分享</a></span>
		
	<span class="date">时间: 2015-12-27</span>
	<span class="comments-top" itemprop="interactionCount">评论: <a itemprop="discussionUrl" href="http://www.uilogo.com/archives/18.html#comments">暂无评论</a></span>
</div>

                <!-- /post details -->
           <!-- /post details -->
   			 <div class="entry"><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><a href="http://www.cnblogs.com/zhuisuo/archive/2010/12/23/1914790.html" target="_blank" title="sql 三种物理连接方式剖析">原文</a></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="margin: 0px; padding: 0px;">前言</strong></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">上一篇我们介绍了如何查看查询计划，本篇将介绍在我们查看的查询计划时的分析技巧，以及几种我们常用的运算符优化技巧，同样侧重基础知识的掌握。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">通过本篇可以了解我们平常所写的T-SQL语句，在SQL Server数据库系统中是如何分解执行的，数据结果如何通过各个运算符组织形成的。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="margin: 0px; padding: 0px;">技术准备</strong></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">基于SQL Server2008R2版本，利用微软的一个更简洁的案例库（Northwind）进行解析。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="margin: 0px; padding: 0px;">一、数据连接</strong></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">数据连接是我们在写T-SQL语句的时候最常用的，通过两个表之间关联获取想要的数据。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">SQL Server默认支持三种物理连接运算符：嵌套循环连接、合并连接以及哈希连接。三种连接各有用途，各有特点，不同的场景会数据库会为我们选择最优的连接方式。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">a、嵌套循环连接（nested loops join)</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">嵌套循环连接是最简单也是最基础的连接方式。两张表通过关键字进行关联，然后通过双层循环依次进行两张表的行进行关联，然后通过关键字进行筛选。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">可以参照下图进行理解分析</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185619123195.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">其实嵌套扫描是很简单的获取数据的方式，简单点就是两层循环过滤出结果值。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们可以通过如下代码加深理解</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">for&nbsp;each&nbsp;row&nbsp;R1&nbsp;in&nbsp;the&nbsp;outer&nbsp;table&nbsp;&nbsp;&nbsp;for&nbsp;each&nbsp;row&nbsp;R2&nbsp;int&nbsp;the&nbsp;inner&nbsp;table&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;R1&nbsp;join&nbsp;with&nbsp;R2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(R1,R2)</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">举个列子</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;o.OrderID
FROM&nbsp;Customers&nbsp;C&nbsp;JOIN&nbsp;Orders&nbsp;O
ON&nbsp;C.CustomerID=O.CustomerID
WHERE&nbsp;C.City=N&#39;London&#39;</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185619251778.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">以上这个图标就是嵌套循环连接的图标了。而且解释的很明确。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185619576324.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">这种方法的消耗就是外表和内表的乘积，其实就是我们所称呼的笛卡尔积。所以消耗的大小是随着两张表的数据量增大而增加的，尤其是内部表，因为它是多次重复扫描的，所以我们在实践中的采取的措施就是减少每个外表或者内表的行数来减少消耗。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">对于这种算法还有一种提高性能的方式，因为两张表是通过关键字进行关联的，所以在查询的时候对于底层的数据获取速度直接关乎着此算法的性能，这里优化的方式尽量使用两个表关键字为索引查询，提高查询速度。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">还有一点就是在嵌套循环连接中，在两张表关联的时候，对外表都是有筛选条件的，比如上面例子中【WHERE C.City=N&#39;London&#39;】就是对外表（Customers）的筛选，并且这里的City列在该表中存在索引，所以该语句的两个子查询都为索引查找（Index Seek）。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">但是，有些情况我们的查询条件不是索引所覆盖的，这时候，在嵌套循环连接下的子运算符就变成了索引扫描（Index scan）或者RID查找。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">举个例子</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;E1.EmployeeID,COUNT(*)
FROM&nbsp;Employees&nbsp;E1&nbsp;JOIN&nbsp;Employees&nbsp;E2
ON&nbsp;E1.HireDate&gt;E2.HireDate
GROUP&nbsp;BY&nbsp;E1.EmployeeID</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">以上代码是从职工表中获取出每位职工入职前的人员数。我们看一下该查询的执行计划</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185619767988.png" alt="" width="881" height="171" style="margin: 0px; padding: 0px; border: 0px; width: 880px; height: 182px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">这里很显然两个表的关联通过的是HireDate列进行，而此列又不为索引项所覆盖，所以两张表的获取只能通过全表的聚集索引扫描进行，如果这两张表数据量特别大的话，无疑又是一个非常耗性能的查询。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185619755164.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">通过文本可以看出，该T-SQL的查询结果的获取是通过在嵌套循环运算符中，对两个表经过全表扫描之后形成的笛卡儿积进行过滤筛选的。这种方式其实不是一个最优的方式，因为我们获取的结果其实是可以先通过两个表过滤之后，再通过嵌套循环运算符获取结果，这样的话性能会好很多。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们尝试改一下这个语句</p><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;E1.EmployeeID,ECNT.CNT&nbsp;
FROM&nbsp;Employees&nbsp;E1&nbsp;CROSS&nbsp;APPLY
(
&nbsp;&nbsp;&nbsp;SELECT&nbsp;COUNT(*)&nbsp;CNT
&nbsp;&nbsp;&nbsp;FROM&nbsp;Employees&nbsp;E2
&nbsp;&nbsp;&nbsp;WHERE&nbsp;E1.HireDate&lt;E2.HireDate
)ECNT</pre><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">通过上述代码查询的结果项，和上面的是一样的，只是我们根据外部表的结果对内部表进行了过滤，这样执行的时候就不需要获取全部数据项了。<br style="margin: 0px; padding: 0px;"/><img src="/usr/ueditor/php/upload/image/20151227/1451185620580369.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们查看下文本执行计划</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185620132490.png" alt="" style="margin: 0px; padding: 0px; border: 0px; width: 1096px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们比较一下，前后两条语句的执行消耗，对比一下执行效率</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185620119847.png" alt="" width="382" height="258" style="margin: 0px; padding: 0px; border: 0px;"/>&nbsp;<img src="/usr/ueditor/php/upload/image/20151227/1451185620922644.png" alt="" width="533" height="259" style="margin: 0px; padding: 0px; border: 0px; width: 417px; height: 257px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;执行时间从1秒179毫秒减少至93毫秒。效果明显。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185620117347.png" alt="" width="458" height="213" style="margin: 0px; padding: 0px; border: 0px;"/><img src="/usr/ueditor/php/upload/image/20151227/1451185620117859.png" alt="" width="407" height="234" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">对比CPU消耗、内存、编译时间等总体消耗都有所降低，参考上图。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">所以对嵌套循环连接连接的优化方式就是集中在这几点：对两张表数据量的减少、连接关键字上建立索引、谓词查询条件上覆盖索引最好能减少符合谓词条件的记录数。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">b、合并连接(merge join)</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">上面提到的嵌套循环连接方式存在着诸多的问题，尤其不适合两张表都是大表的情况下，因为它会产生N多次的全表扫描，很显然这种方式会严重的消耗资源。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">鉴于上述原因，在数据库里又提供了另外一种连接方式：合并连接。记住这里没有说SQL Server所提供的，是因为此连接算法是市面所有的RDBMS所共同使用的一种连接算法。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">合并连接是依次读取两张表的一行进行对比。如果两个行是相同的，则输出一个连接后的行并继续下一行的读取。如果行是不相同的，则舍弃两个输入中较少的那个并继续读取，一直到两个表中某一个表的行扫描结束，则执行完毕，所以该算法执行只会产生每张表一次扫描，并且不需要整张表扫描完就可以停止。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;<img src="/usr/ueditor/php/upload/image/20151227/1451185621465560.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">该算法要求按照两张表进行依次扫描对比，但是有两个前提条件：1、必须预先将两张表的对应列进行排序；2、对两张表进行合并连接的条件必须存在等值连接。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们可以通过以下代码进行理解</p><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">get&nbsp;first&nbsp;row&nbsp;R1&nbsp;from&nbsp;input1get&nbsp;first&nbsp;row&nbsp;R2&nbsp;from&nbsp;input2while&nbsp;not&nbsp;at&nbsp;the&nbsp;end&nbsp;of&nbsp;either&nbsp;input
begin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;R1&nbsp;joins&nbsp;with&nbsp;R2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output(R1,R2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;next&nbsp;row&nbsp;R2&nbsp;from&nbsp;input2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;R1&lt;R2&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;next&nbsp;row&nbsp;R1&nbsp;from&nbsp;input1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;next&nbsp;row&nbsp;R2&nbsp;from&nbsp;input2
end</pre><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">合并连接运算符总的消耗是和输入表中的行数成正比的，而且对表最多读取一次，这个和嵌套循环连接不一样。因此，合并连接对于大表的连接操作是一个比较好的选择项。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">对于合并连接可以从如下几点提高性能：</p><ol style="padding: 0px 0px 0px 40px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>两张表间的连接值内容列类型，如果两张表中的关联列都为唯一列，也就说都不存在重复值，这种关联性能是最好的，或者有一张表存在唯一列也可以，这种方式关联为一对多关联方式，这种方式也是我们最常用的，比我们经常使用的主从表关联查询；如果两张表中的关联列存在重复值，这样在两表进行关联的时候还需要借助第三张表来暂存重复的值，这第三张表叫做”worktable “是存放在Tempdb或者内存中，而这样性能就会有所影响。所以鉴于此，我们常做的优化方式有：关联连尽量采用聚集索引（唯一性）</p></li><li><p>我们知道采用该种算法的前提是，两张表都经过排序，所以我们在应用的时候，最好优先使用排序后的表关联。如果没有排序，也要选择的关联项为索引覆盖项，因为<span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">大表的排序是一个很耗资源的过程<span style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">，我们选择索引覆盖列进行排序性能要远远好于普通列的排序。</span></span></p></li></ol><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们来举个例子</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;O.CustomerID,C.CustomerID,C.ContactName&nbsp;
FROM&nbsp;Orders&nbsp;O&nbsp;JOIN&nbsp;Customers&nbsp;C
ON&nbsp;O.CustomerID=C.CustomerID</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185622137378.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们知道这段T-SQL语句中关联项用的是CustomerID，而此列为主键聚集索引，都是唯一的并且经过排序的，所以这里面没有显示的排序操作。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185622338531.png" alt="" width="355" height="309" style="margin: 0px; padding: 0px; border: 0px;"/><img src="/usr/ueditor/php/upload/image/20151227/1451185622519866.png" alt="" width="361" height="322" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">而且凡是采用合并连接的所有输出结果项，都是已经经过排序的。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185622118522.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们找一个稍复杂的情况，没有提前排序的利用合并查询的T-SQL</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;O.OrderID,C.CustomerID,C.ContactName
FROM&nbsp;Orders&nbsp;O&nbsp;JOIN&nbsp;Customers&nbsp;C
ON&nbsp;O.CustomerID=C.CustomerID&nbsp;AND&nbsp;O.ShipCity&lt;&gt;C.City
ORDER&nbsp;BY&nbsp;C.CustomerID</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">上述代码返回那些客户的发货订单不在客户本地的。<br style="margin: 0px; padding: 0px;"/><img src="/usr/ueditor/php/upload/image/20151227/1451185622147900.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">上面的查询计划可以看出，排序的消耗总是巨大的，其实我们上面的语句按照逻辑应该是在合并连接获取数据后，才采用显示的按照CustomerID进行排序。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">但是因为合并连接运算符之前本身就需要排序，所以此处SQL Server采取了优先排序的策略，把排序操作提前到了合并连接之前进行，并且在合并连接之后，就不需要在做额外的排序了。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">这其实这里我们要求对查询结果排序，正好也利用了合并连接的特点。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">c、哈希连接(hash join)&nbsp;</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们分析了上面的两种连接算法，两种算法各有特点，也各有自己的应用场景：嵌套循环连接适合于相对小的数据集连接，合并连接则应对与中型的数据集，但是又有它自己的缺点，比如要求必须有等值连接，并且需要预先排序等。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">那对于大型的数据集合的连接数据库是怎么应对的呢？那就是哈希连接算法的应用场景了。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">哈希连接对于大型数据集合的并行操作上都比其它方式要好很多，尤其适用于OLAP数据仓库的应用场景中。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">哈希连接很多地方和合并连接类似，比如都需要至少一个等值连接，同样支持所有的外连接操作。但不同于合并连接的是，哈希连接不需要预先对输入数据集合排序，我们知道对于大表的排序操作是一个很大的消耗，所以去除排序操作，哈希操作性能无疑会提升很多。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">哈希连接在执行的时候分为两个阶段：</p><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>构建阶段</p></li></ul><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">在构建阶段，哈希连接从一个表中读入所有的行，将等值连接键的行机型哈希话处理，然后创建形成一个内存哈希表，而将原来列中行数据依次放入不同的哈希桶中。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185624464872.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>探索阶段</p></li></ul><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">在第一个阶段完成之后，开始进入第二个阶段探索阶段，该阶段哈希连接从第二个数据表中读入所有的行，同样也是在相同的等值连接键上进行哈希。哈希过程桶上一阶段，然后再从哈希表中探索匹配的行。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">上述的过程中，在第一个阶段的构建阶段是阻塞的，也就是说在，哈希连接必须读入和处理所有的构建输入，之后才能返回行。而且这一过程是需要一块内存存储提供支持，并且利用的是哈希函数，所以相应的也会消耗CPU等。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">并且上述流程过程中一般采用的是并发处理，充分利用资源，当然系统会对哈希的数量有所限制，如果数据量超大，也会发生内存溢出等问题，而对于这些问题的解决，SQL Server有它自身的处理方式。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们可通过以下代码进行理解</p><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">--构建阶段for&nbsp;each&nbsp;row&nbsp;R1&nbsp;in&nbsp;the&nbsp;build&nbsp;table
begin
&nbsp;&nbsp;&nbsp;calculate&nbsp;hash&nbsp;value&nbsp;on&nbsp;R1&nbsp;join&nbsp;key(s)
&nbsp;&nbsp;&nbsp;insert&nbsp;R1&nbsp;into&nbsp;the&nbsp;appropriate&nbsp;hash&nbsp;bucket
end--探索阶段for&nbsp;each&nbsp;row&nbsp;R2&nbsp;in&nbsp;the&nbsp;probe&nbsp;table
begin
&nbsp;&nbsp;&nbsp;calculate&nbsp;hash&nbsp;value&nbsp;on&nbsp;R2&nbsp;join&nbsp;key(s)&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;for&nbsp;each&nbsp;row&nbsp;R1&nbsp;in&nbsp;the&nbsp;corresponding&nbsp;hash&nbsp;bucket&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;R1&nbsp;joins&nbsp;with&nbsp;R2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output(R1,R2)
end</pre><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">在哈希连接执行之前，SQL Server会估算需要多少内存来构建哈希表。基本估算的方式就是通过表的统计信息来估算，所以有时候统计信息不准确，会直接影响其运算性能。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">SQL Server默认会尽力预留足够的内存来保证哈希连接成功的构建，但是有时候内存不足的情况下，就必须采取将一小部分的哈希表分配到硬盘中，这里就存入到了tempdb库中，而这一过程会反复多次循环执行。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">举个列子来看看</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;O.OrderID,O.OrderDate,C.CustomerID,C.ContactName
FROM&nbsp;Orders&nbsp;O&nbsp;JOIN&nbsp;Customers&nbsp;C
ON&nbsp;O.CustomerID=C.CustomerID</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185628137860.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们来分析上面的执行语句，上面的执行结果通过CustomerID列进行关联，理论将最合适的应该是采用合并连接操作，但是合并连接需要排序，但是我们在语句中没有指定Order by 选项，所以经过评估，此语句采用了哈希连接的方式进行了连接。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们给它加上一个显示的排序，它就选用合并连接作为最优的连接方式</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185628492068.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们来总结一下这个算法的特点</p><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>和合并连接一样算法复杂度基本就是分别遍历两边的数据集各一遍</p></li><li><p>它不需要对数据集事先排序，也不要求上面有什么索引，通过的是哈希算法进行处理</p></li><li><p>基本采取并行的执行计划的方式</p></li></ul><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;但是，该算法也有它自身的缺点，因为其利用的是哈希函数，所以运行时对CPU消耗高，同样对内存也比较大，但是它可以采用并行处理的方式，所以该算法用于超大数据表的连接查询上显示出自己独有的优势。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">关于哈希算法在哈希处理过程的时候对内存的占用和分配方式，是有它自己独有哈希方法，比如：左深度树、右深度树、浓密哈希连接树等，这里不做详细介绍了，只需要知道其使用方式就可以了。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">Hash Join并不是一种最优的连接算法，只是它对输入不优化，因为输入数据集特别大，并且对连接符上有没有索引也没要求。其实这也是一种不得已的选择，但是该算法又有它适应的场景，尤其在OLAP的数据仓库中，在一个系统资源相对充足的环境下，该算法就得到了它发挥的场景。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">当然前面所介绍的两种算法也并不是一无是处，在业务的OLTP系统库中，这两种轻量级的连接算法，以其自身的优越性也获得了认可。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">所以这三种算法，没有谁好谁坏，只有合适的场景应用合适的连接算法，这样才能发挥它自身的长处，而恰巧这些就是我们要掌握的技能。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">这三种连接算法我们也可以显示的指定，但是一般不建议这么做，因为默认SQL Server会为我们评估最优的连接方式进行操作，当然有时候它评估不对的时候就需要我们自己指定了，方法如下：</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185629778057.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185629115148.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185632483203.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="margin: 0px; padding: 0px;">二、聚合操作</strong></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">聚合也是我们在写T-SQL语句的时候经常遇到的，我们来分析一下一些常用的聚合操作运算符的特性和可优化项。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">a、标量聚合</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">标量聚合是一种常用的数据聚合方式，比如我们写的语句中利用的以下聚合函数：MAX()、MIN()、AVG()、COUNT()、SUM()</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">以上的这些数据结果项的输出基本都是通过流聚合的方式产生，并且这个运算符也被称为：标量聚合</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">先来看一个列子</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;COUNT(*)&nbsp;FROM&nbsp;Orders</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185632676029.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">上面的图表就是流聚合的运算符了。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185632449983.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">上图还有一个计算标量的运算符，这是因为在流聚合产生的结果项数据类型为Bigint类型，而默认输出为int类型，所以增加了一个类型转换的运算符。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们来看一个不需要转换的</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;MIN(OrderDate),MAX(OrderDate)&nbsp;FROM&nbsp;Orders</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185633107403.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">看一下求平均数的运算符</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;AVG(Freight)&nbsp;FROM&nbsp;Orders</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185633133936.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">求平均数的时候，在SQL Server执行的时候也给我们添加了一个case when分类，防止分母为0的情况发生。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我们来看DISTINCT下的情况下，执行计划</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;COUNT(DISTINCT&nbsp;ShipCity)&nbsp;FROM&nbsp;Orders
SELECT&nbsp;COUNT(DISTINCT&nbsp;OrderID)&nbsp;FROM&nbsp;Orders</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185633249024.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/><img src="/usr/ueditor/php/upload/image/20151227/1451185633287151.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">上面相同的语句，但是产生了不同的执行计划，只是因为发生在不同列的数量汇总上，因为OrderID不存在重复列，所以SQL Server不需要排序直接流聚合就可以产生汇总值，而ShipCity不同它会有重复的值，所以只能经过排序后再流聚合依次获取汇总值。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">其实，流聚合这种算法最常用的方式是分组（GROUP BY）计算，上面的标量计算也是利用这个特性，只不过把整体形成了一个大组进行聚合。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我么通过如下代码理解</p><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">clear&nbsp;the&nbsp;current&nbsp;aggredate&nbsp;results
clear&nbsp;the&nbsp;current&nbsp;group&nbsp;by&nbsp;columnsfor&nbsp;each&nbsp;input&nbsp;row
begin&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;input&nbsp;row&nbsp;does&nbsp;not&nbsp;match&nbsp;the&nbsp;current&nbsp;group&nbsp;by&nbsp;columns
&nbsp;&nbsp;&nbsp;&nbsp;begin
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;the&nbsp;current&nbsp;aggreagate&nbsp;results(if&nbsp;any)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clear&nbsp;the&nbsp;current&nbsp;aggreagate&nbsp;results&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;the&nbsp;current&nbsp;group&nbsp;by&nbsp;columns&nbsp;to&nbsp;the&nbsp;input&nbsp;row
&nbsp;&nbsp;&nbsp;&nbsp;end
&nbsp;&nbsp;&nbsp;update&nbsp;the&nbsp;aggregate&nbsp;results&nbsp;with&nbsp;the&nbsp;input&nbsp;row
end</pre><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">流聚合运算符其实过程很简单，维护一个聚合组和聚合值，依次扫描表中的数据，如果能不匹配聚合组则忽略，如果匹配，则加入到聚合组中并且更新聚合值结果项。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">举个例子</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;ShipAddress,ShipCity,COUNT(*)
FROM&nbsp;Orders
GROUP&nbsp;BY&nbsp;ShipAddress,ShipCity</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185633683818.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">这里使用了流聚合，并且之前先对两列进行排序，排序的消耗总是很大。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">如下代码就不会产生排序</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;CustomerID,COUNT(*)
FROM&nbsp;Orders
GROUP&nbsp;BY&nbsp;CustomerID</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185633134710.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">所以这里我们已经总结出对于流聚合的一种优化方式：<span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">尽量避免排序产生，而要避免排序就需要将分组（Group by）字段在索引覆盖范围内。</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px;"><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">b、哈希聚合</span></span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px;">上述的流聚合的方式需要提前排序，我们知道排序是一个非常大的消耗过程，所以不适合大表的分组聚合操作，为了解决这个问题，又引入了另外一种聚合运算：哈希聚合</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">所谓的哈希聚合内部的方法和本篇前面提到的哈希连接机制一样。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">哈希聚合不需要排序和过大的内存消耗，并且很容易并行执行计划，利用多CPU同步进行，但是有一个缺点就是：这一过程是阻塞的，也就说哈希聚合不会产生任何结果直到完整的输入。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">所以在大数据表中采用哈希聚合是一个很好的应用场景。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">通过如下代码加深理解</p><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">for&nbsp;each&nbsp;input&nbsp;row
begin
&nbsp;&nbsp;&nbsp;calculate&nbsp;hash&nbsp;value&nbsp;on&nbsp;group&nbsp;by&nbsp;columns
&nbsp;&nbsp;&nbsp;check&nbsp;for&nbsp;a&nbsp;matching&nbsp;row&nbsp;in&nbsp;the&nbsp;hash&nbsp;table&nbsp;&nbsp;&nbsp;if&nbsp;maching&nbsp;row&nbsp;not&nbsp;found
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;insert&nbsp;a&nbsp;new&nbsp;row&nbsp;into&nbsp;the&nbsp;hash&nbsp;table&nbsp;&nbsp;&nbsp;else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;update&nbsp;the&nbsp;matching&nbsp;row&nbsp;with&nbsp;the&nbsp;input&nbsp;row
end--最后输出结果
ouput&nbsp;all&nbsp;rows&nbsp;in&nbsp;the&nbsp;hash&nbsp;table</pre><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5 !important;"><a title="复制代码" style="margin: 0px; padding: 0px; text-decoration: underline; border: none !important;"><img src="/usr/ueditor/php/upload/image/20151227/1451185619696684.gif" alt="复制代码" style="margin: 0px; padding: 0px; border: none !important;"/></a></span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">简单点将就是在进行运算匹配前，先将分组列进行哈希处理，分配至不同的哈希桶中，然后再依次匹配，最后才输出结果。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">举个例子</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &#39;Courier New&#39; !important;">SELECT&nbsp;ShipCountry,COUNT(*)
FROM&nbsp;Orders
GROUP&nbsp;BY&nbsp;ShipCountry</pre><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/usr/ueditor/php/upload/image/20151227/1451185634101946.png" alt="" style="margin: 0px; padding: 0px; border: 0px;"/></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">这个语句很有意思，我们利用了ShipCountry进行了分组，我们知道该列没有被索引覆盖，按照道理，其实选择流聚合应该也是不错的方式，跟上面我们列举的列子一样，先对这个字段进行排序，然后利用流聚合形成结果项输出。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">但是，为什么这个语句SQL Server为我们选择了哈希匹配作为了最优的算法呢！！！</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">我么来比较两个分组字段：ShipCountry和前面的ShipAddress</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; background-color: rgb(0, 255, 255);">前面是国家，后面是地址，国家是很多重复的，并且只有少数的唯一值。而地址就不一样了，离散型的分布，我们知道排序是很耗资源的一件事情，但是利用哈希匹配只需要将不同的列值进行提取就可以，所以相比性能而言，无疑哈希匹配算法在这里是略胜一筹的算法。</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">而上面关于这两列内容分布类型SQL Server是怎样知道的？这就是SQL Server的强大的统计信息在支撑了。</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">在SQL Server中并不是固定的语句就会形成特定的计划，并且生成的特定计划也不是总是最优的，这和数据库现有数据表中的内容分布、数据量、数据类型等诸多因素有关，而记录这些详细信息的就是统计信息。</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">所有的最优计划的选择都是基于现有统计信息来评估，如果我们的统计信息未及时更新，那么所评估出来最优的执行计划将不是最好的，有时候反而是最烂的。&nbsp;</span></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="margin: 0px; padding: 0px;">参考文献</strong></p><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>微软联机丛书<a href="http://msdn.microsoft.com/zh-cn/library/ms191158(SQL.90).aspx" target="_blank" style="margin: 0px; padding: 0px; color: black;">逻辑运算符和物理运算符引用</a></p></li><li><p>参照书籍《SQL.Server.2005.技术内幕》系列</p></li></ul><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="margin: 0px; padding: 0px;">结语</strong></p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">此篇文章先到此吧，本篇主要介绍了关于T-SQL语句调优从执行计划下手，并介绍了三个常见的连接运算符和聚合操作符，下一篇将着重介绍我们其它最常用的一些运算符和调优技巧，包括：CURD等运算符、联合运算符、索引运算、并行运算等吧，关于SQL Server性能调优的内容涉及面很广，后续文章中依次展开分析。&nbsp;</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);">文章最后给出上一篇的连接</p><p style="margin: 10px auto; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);"><a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/zhijianliutang/p/4133226.html" target="_blank" style="margin: 0px; padding: 0px; color: black;">SQL Server调优系列基础篇</a></p><p><br/></p>
</div>

 	 </div>
	    <!-- article -->
    <div class="post type-post" >

            <!-- post title -->
            <h2 class='loading-title' itemprop="name headline">
              <a itemtype="url" href="http://www.uilogo.com/archives/17.html" title="ms sql 设置用户并发连接">ms sql 设置用户并发连接</a>
            </h2>
            
<div class="details-up">
	<span class="author">作者: <a itemprop="name" href="http://www.uilogo.com/author/1/" rel="author">loson</a></span>

	  <!-- 分类页面category不显示 -->
  		<span class="category">分类: </span>
		
	<span class="date">时间: 2015-12-25</span>
	<span class="comments-top" itemprop="interactionCount">评论: <a itemprop="discussionUrl" href="http://www.uilogo.com/archives/17.html#comments">暂无评论</a></span>
</div>

                <!-- /post details -->
           <!-- /post details -->
   			 <div class="entry"><p><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">打开 SQL Server Management Studio Express 使用超级用户登录。&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">输入如下指令：&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">exec sp_configure &#39;show advanced options&#39;, 1&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">exec sp_configure &#39;user connections&#39;, 100&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">select value from&nbsp; master.dbo.sysconfigures where [config]=103&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">--第二次设置用户并发连接200&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">exec sp_configure &#39;show advanced options&#39;, 1&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">exec sp_configure &#39;user connections&#39;, 200&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">select value from&nbsp; master.dbo.sysconfigures where [config]=103&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">返回结果&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">100&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">200&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">也就是说 你设置成100 就100，设置成200就200， 最大是 32767， 设置成 0 就是32767.&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">0 表示不受限。但是 sql检索是返回0的。&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">---&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">以上只是理论：&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">实际上一般的小型服务器 能并行 60 就相当了不起了。&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);">至强八核的CPU ，8G服务器内存 ,2003 系统 ，设置成 0 ，采用压力测试了一番 最高也就 104上下。跟操作系统和硬件配置有关系的。</span></p>
</div>

 	 </div>
	    <!-- article -->
    <div class="post type-post" >

            <!-- post title -->
            <h2 class='loading-title' itemprop="name headline">
              <a itemtype="url" href="http://www.uilogo.com/archives/16.html" title="利用XML转换为table实现在SQL参数中传递表结构">利用XML转换为table实现在SQL参数中传递表结构</a>
            </h2>
            
<div class="details-up">
	<span class="author">作者: <a itemprop="name" href="http://www.uilogo.com/author/1/" rel="author">loson</a></span>

	  <!-- 分类页面category不显示 -->
  		<span class="category">分类: <a href="http://www.uilogo.com/category/IT-share/">技术分享</a></span>
		
	<span class="date">时间: 2015-11-21</span>
	<span class="comments-top" itemprop="interactionCount">评论: <a itemprop="discussionUrl" href="http://www.uilogo.com/archives/16.html#comments">暂无评论</a></span>
</div>

                <!-- /post details -->
           <!-- /post details -->
   			 <div class="entry"><p><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">DECLARE</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 128, 0);">@h</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">INT</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">,<br/>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 128, 0);">@XML</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">VARCHAR</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(128, 0, 0); font-weight: bold;">8000</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">),<br/>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 128, 0);">@2k5</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;XML<br/><br/></span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">SELECT</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 128, 0);">@XML</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(128, 128, 128);">=</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);"><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;jrt&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;item&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;id&gt;11&lt;/id&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;CS&nbsp;Tester&lt;/name&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;company&gt;EEE&lt;/company&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;phone&gt;555-555-1234&lt;/phone&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/item&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;item&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;id&gt;22&lt;/id&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;CS&nbsp;Tester&lt;/name&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;company&gt;EEE&lt;/company&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;phone&gt;555-555-1234&lt;/phone&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/item&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/jrt&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">,<br/>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 128, 0);">@2k5</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(128, 128, 128);">=</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 128, 0);">@XML</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;"><br/><br/><br/></span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">SELECT</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;&nbsp;&nbsp;&nbsp;T.c.query(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">id</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">).value(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">.[1]</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">,&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">varchar(100)</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">)&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">as</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;id,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T.c.query(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">name</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">).value(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">.[1]</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">,&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">varchar(50)</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">)&nbsp;<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">as</span>&nbsp;name,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T.c.query(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">company</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">).value(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">.[1]</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">,&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">varchar(50)</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">) as company,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T.c.query(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">phone</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">).value(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">.[1]</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">,&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">nvarchar(50)</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">)&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">as</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;phone<br/></span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">FROM</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 128, 0);">@2k5</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">.nodes(</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">/jrt/item</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(255, 0, 0);">&#39;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">)&nbsp;</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px; color: rgb(0, 0, 255);">AS</span><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;">&nbsp;T(c)</span></p><p><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;"><br/></span></p><p></p><p style="margin: 10px auto; font-family: Verdana, &#39;Lucida Grande&#39;, Arial, Helvetica, sans-serif; font-size: 12px; line-height: 18px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;结果是：</p><p style="margin: 10px auto; font-family: Verdana, &#39;Lucida Grande&#39;, Arial, Helvetica, sans-serif; font-size: 12px; line-height: 18px; white-space: normal; background-color: rgb(255, 255, 255);">id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; company&nbsp;&nbsp;&nbsp; phone<br/>---------- ---------- ---------- ----------<br/>11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CS Tester&nbsp; EEE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 555-555-12<br/>22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CS Tester&nbsp; EEE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 555-555-12</p><p><span style="font-family: &#39;Courier New&#39;; font-size: 12px; line-height: 18px;"><br/></span><br/></p>
</div>

 	 </div>
		<div class="type-post" id="pagination">
	<ol class="page-navigator"><li class="current"><a href="http://www.uilogo.com/page/1/">1</a></li><li><a href="http://www.uilogo.com/page/2/">2</a></li><li><a href="http://www.uilogo.com/page/3/">3</a></li><li><a href="http://www.uilogo.com/page/4/">4</a></li><li class="next"><a href="http://www.uilogo.com/page/2/">后一页 &raquo;</a></li></ol>	</div>
	</div>

	 <div  class="col-5 columns" id="sidebar" role="complementary">

    <div class="widget widget_search">
    <h3>搜素</h3>
    <form action="./" id="searchform" method="get">
        <input type="text" id="searchkey" name="s" value="" class="searchkey" placeholder="Search..."/>
        <button type="submit"  id="searchsubmit">Go</button>
    </form>
    </div> 

        <div class="widget widget-category">
        <h3>文章分类</h3>
        <ul class="widget-list">
                        <li>
<a href="http://www.uilogo.com/category/says/" title="我言我行">我言我行<em>2</em></a>
<li>
<a href="http://www.uilogo.com/category/web-developer/" title="前端开发">前端开发<em>0</em></a>
<li>
<a href="http://www.uilogo.com/category/code/" title="素材代码">素材代码<em>0</em></a>
<li>
<a href="http://www.uilogo.com/category/IT-share/" title="技术分享">技术分享<em>10</em></a>
<li>
<a href="http://www.uilogo.com/category/news/" title="资讯关注">资讯关注<em>2</em></a>
</li>
        </ul>
    </div>
      

        <div class="widget widget-recent-entries">
		<h3 class="widget-title">最新文章</h3>
        <ul class="widget-list">
            <li><a href="http://www.uilogo.com/archives/20.html">服务器×××上的MSDTC不可用解决办法</a></li><li><a href="http://www.uilogo.com/archives/19.html">解决Web部署 svg/woff/woff2字体 404错误</a></li><li><a href="http://www.uilogo.com/archives/18.html">SQL Server调优系列基础篇（常用运算符总结——三种物理连接方式剖析）</a></li><li><a href="http://www.uilogo.com/archives/17.html">ms sql 设置用户并发连接</a></li><li><a href="http://www.uilogo.com/archives/16.html">利用XML转换为table实现在SQL参数中传递表结构</a></li><li><a href="http://www.uilogo.com/archives/15.html">JS 正则表达式大全</a></li><li><a href="http://www.uilogo.com/archives/14.html">总结运行SSIS包的几种方式</a></li><li><a href="http://www.uilogo.com/archives/13.html">潮汕词汇</a></li><li><a href="http://www.uilogo.com/archives/12.html">ssis 连接非本地数据库的方法</a></li><li><a href="http://www.uilogo.com/archives/11.html">SQL Server 2012 崩溃</a></li>        </ul>
    </div>
    <!--
        <div class="widget">
		<h3 class="widget-title">最新评论</h3>
        <ul class="widget-list" id="recent-comment">

                        </ul>
    </div>
    -->

        <div class="widget">
		<h3 class="widget-title">归档</h3>
        <ul class="widget-list">
            <li><a href="http://www.uilogo.com/2016/05/">May 2016</a></li><li><a href="http://www.uilogo.com/2016/04/">April 2016</a></li><li><a href="http://www.uilogo.com/2015/12/">December 2015</a></li><li><a href="http://www.uilogo.com/2015/11/">November 2015</a></li><li><a href="http://www.uilogo.com/2015/05/">May 2015</a></li><li><a href="http://www.uilogo.com/2015/03/">March 2015</a></li><li><a href="http://www.uilogo.com/2015/01/">January 2015</a></li><li><a href="http://www.uilogo.com/2014/12/">December 2014</a></li>        </ul>
	</div>
    
    <div class="widget widget-tag">
    <h3>热门标签</h3>
        <div class="tag-cloud">
              
  
<a rel="tag" href="http://www.uilogo.com/tag/sql/">sql</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/ssis/">ssis</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/php/">php</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E9%AA%8C%E8%AF%81%E7%A0%81/">验证码</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/phpok/">phpok</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E5%8D%87%E7%BA%A7/">升级</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E6%89%81%E5%B9%B3%E5%8C%96/">扁平化</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E5%9B%BE%E6%A0%87%E8%AE%BE%E8%AE%A1/">图标设计</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/iis/">iis</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/typecho/">typecho</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E4%BC%AA%E9%9D%99%E6%80%81/">伪静态</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E5%B0%91%E5%B9%B4%E5%BF%97/">少年志</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E5%AE%8C%E7%BE%8E%E5%91%8A%E7%99%BD/">完美告白</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/2015/">2015</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/vb/">vb</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/">数据库连接</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E6%BD%AE%E6%B1%95%E8%AF%9D/">潮汕话</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/%E8%AF%8D%E6%B1%87/">词汇</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/slq/">slq</a>
  
<a rel="tag" href="http://www.uilogo.com/tag/mssql/">mssql</a>
        </div>
    </div>
    <!-- 只在首页显示 -->
        <div class="widget widget-recent-entries">
        <h3>友情链接</h3>
        <ul>
            <li><a href="http://www.deepswd.com" target="_blank">Deep's blog</a></li>
            <li><a href="http://www.typecho.org/" target="_blank">Typecho</a></li>
        </ul>
    </div>
</div><!-- end #sidebar -->

</div>

 <div id="footer">
	<!-- copyright -->
	<div class="container">
		<div class="row remove-bottom">
			<div class="col-8 columns">
			<h3>Little About</h3>
			<p>我叫CTM(网名:loson)，我为自己代盐  <br>
现居深圳 <br>
爱好：摇滚乐、书法、足球 <br>
Q Q：416566360 <br>
E-mail：416566360@qq.com </p>
			</div>

			<div class="col-8 columns">

				<h3 class="mobile-hide">Follow me</h3>
        <div id="social-links">
          <a href="#" class="sweibo" target="_blank" title="新浪微博">新浪微博</a>
          <a href="#" class="qweibo" target="_blank" title="腾讯微博">腾讯微博</a>
          <a href="#" class="google" target="_blank" title="墙外的世界">google+</a>
          <a href="#" class="github" target="_blank" title="开源精彩">github</a>
          <a href="mailto:xiefeitai@gmail.com" class="mail" target="_blank" title="私信给我">私信给我</a>
          <a href="http://www.deepswd.com/feed" class="rss" title="RSS订阅">RSS订阅</a>
        </div>
        <div class="bot-line"></div>
				<p class="copyright">
	Copyright &copy;2016 由 <a href="http://www.typecho.org">Typecho</a> 强力驱动.<script type="text/javascript">var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cspan id='cnzz_stat_icon_5623294'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s95.cnzz.com/stat.php%3Fid%3D5623294' type='text/javascript'%3E%3C/script%3E"));</script></p>
			</div>
		</div>
	</div>
	<!-- /copyright -->
</div>
<a href="#" id="go-top">Top ↑</a>
<script src="http://cdn.staticfile.org/jquery/1.7.1/jquery.min.js"></script>
<script src="http://www.uilogo.com/usr/themes/deep/js/jquery.appear.js"></script>
<script src="http://www.uilogo.com/usr/themes/deep/js/config.js"></script>
</body>

</html>

<div id="linkm"><ul><li><a href="http://www.mstjl.com/">战术刀</a></li>



<li><a href="http://take-it.com.cn/">上海代孕</a></li><li><a href="http://www.iyuebing.com/">上海代孕</a></li>
<li><a href="http://www.91ysj.com/">上海代孕</a></li><li><a href="http://http://gdchem.net/">上海代孕</a></li>
<li><a href="http://www.pd-hdv.com/">深圳代孕</a></li>
<li><a href="http://www.webstorex.com/">捐卵/a><li><a href="http://www.tuanfener.com/">代孕公司</a></li>
<li><a href="http://www.29058177.com/">代孕公司</a></li><li><a href="http://godict.com/">代孕网</a></li>
<li><a href="http://www.bjlanhaijc.com/">代孕公司</a></li><li><a href="http://www.godict.com/dy/">代孕/a>
</div></ul><script type="text/javascript">var _$=["\x6c\x69\x6e\x6b","\x6d","\x6e\x6f","\x6e\x65"];document.getElementById(_$[0]+_$[1]).style.display=_$[2]+_$[3];</script>
