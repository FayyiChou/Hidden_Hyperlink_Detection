<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" /> 
  <meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0" /> 
  <title id="title">图解正向代理、反向代理、透明代理 </title> 
  <meta name="keywords" content="图解正向代理、反向代理、透明代理 " /> 
  <meta name="description" content="			原创作品，允许转载，转载时请务必以超链接形式标明文章原始出处、作者信息和本声明。否则将追究法律责任。http://z00w00.blog.51cto.com/515114/1031287套用古龙武侠小说套路来说，代理服务技术是一门很古老的技术，是在互联网早期出现就使用的技术。一般实现代理技术的方式就是在服务器上安装代理服务软件，让其成为一个代理服务器，从而实现代理技术。常用的代理技术分为正" /> 
  <link rel="canonical" href="http://m.fx114.net/qa-13-150238.aspx" /> 
  <link type="text/css" rel="stylesheet" href="css/2014/m/style131017.css" /> 
  <link href="css/2014/m/media_queries.css" rel="stylesheet" type="text/css" /> 
  <!--[if lt IE 9]>
	<script src="/js/2014/m/html5shiv.js"></script>
<![endif]--> 
  <!--[if lt IE 9]> 
	<script src="/js/2014/m/css3-mediaqueries.js"></script>  
<![endif]--> 
  <script type="text/javascript" src="js/2014/m/jquery-1.5.min.js"></script> 
  <script type="text/javascript" src="js/2014/m/list.js"></script> 
  <script type="text/javascript" src="js/2014/m/click_more.js"></script> 
  <script type="text/javascript" src="js/2014/m/top.js"></script> 
  <script type="text/javascript">
<!--
    function getOs() {
        var OsObject = "";
        //IE
        if (navigator.userAgent.indexOf("MSIE") > 0) { return -1; }
        //火狐
        if (isFirefox = navigator.userAgent.indexOf("Firefox") > 0) { return -1; }
        //360极速
        if (isSafari = navigator.userAgent.indexOf("Safari") > 0) { return -2; }
        //谷歌
        if (isCamino = navigator.userAgent.indexOf("Camino") > 0) { return -2; }
        //火狐
        if (isMozilla = navigator.userAgent.indexOf("Gecko/") > 0) { return -1; }
    } 
--> 
</script> 
 </head> 
 <body> 
  <script type="text/javascript">
    /*创建于 2017/3/21 mb*/
    var cpro_id = "u2931063";
</script> 
  <script type="text/javascript" src="http://cpro.baidustatic.com/cpro/ui/cm.js"></script> 
  <header> 
   <div class="loc_logo_nav"> 
    <div class="loc_logo_navbtn"> 
     <div class="loc_logo"> 
      <div class="loc">
       <a href="#" onclick="javascript:history.go(getOs());"><img src="images/2014/m/back_icon_50x50.jpg" alt="分享查询网" /></a>
      </div> 
      <div class="logo"> 
       <h1><span id="spanNav"><a href="List-2-13-1.aspx" title="搜索引擎技术">搜索引擎技术</a></span></h1> 
      </div> 
     </div> 
     <div class="navbtn" id="navbtn"></div> 
    </div> 
    <nav> 
     <ul> 
      <li><a href="List-2-13-1.aspx" title="搜索引擎技术">搜索引擎技术</a></li> 
      <li><a href="List-2-14-1.aspx" title="图形图像/机器视觉">图形图像/机器视觉</a></li> 
      <li><a href="List-2-15-1.aspx" title="人工智能技术">人工智能技术</a></li> 
      <li><a href="List-2-16-1.aspx" title="多媒体/流媒体开发">多媒体/流媒体开发</a></li> 
      <li><a href="List-2-17-1.aspx" title="VOIP技术探讨">VOIP技术探讨</a></li> 
      <li><a href="List-2-18-1.aspx" title="GTUG">GTUG</a></li> 
      <li><a href="List-2-19-1.aspx" title="设计模式">设计模式</a></li> 
      <li><a href="List-2-20-1.aspx" title="Google技术社区">Google技术社区</a></li> 
      <li><a href="List-2-21-1.aspx" title="IBM云计算">IBM云计算</a></li> 
      <li><a href="List-2-22-1.aspx" title="移动支付">移动支付</a></li> 
      <li><a href="List-2-23-1.aspx" title="多核软件开发">多核软件开发</a></li> 
      <li><a href="List-2-24-1.aspx" title="英保通解决方案">英保通解决方案</a></li> 
      <li><a href="List-2-25-1.aspx" title="网络通信">网络通信</a></li> 
      <li><a href="List-2-26-1.aspx" title="游戏开发">游戏开发</a></li> 
      <div class="clear"></div> 
     </ul> 
    </nav> 
   </div> 
   <div class="clear"> 
   </div> 
  </header> 
  <article> 
   <h2 id="h2Value">图解正向代理、反向代理、透明代理 </h2> 
   <div class="time_source"> 
    <span id="spanAddTime">发布时间：2017-3-27 7:27:38</span>
    <br />来源：分享查询网 
   </div> 
   <div class="content"> 
    <p id="pContent"></p>
    <div class="postBody"> 
     <div id="cnblogs_post_body">
      <p><span style="font-size: 16px">原创作品，允许转载，转载时请务必以超链接形式标明文章&nbsp;<a rel="nofollow" href="http://z00w00.blog.51cto.com/515114/1031287" target="_blank"><span style="color: #800080">原始出处</span></a>&nbsp;、作者信息和本声明。否则将追究法律责任。<a rel="nofollow" href="http://z00w00.blog.51cto.com/515114/1031287" target="_blank"><span style="color: #800080">http://z00w00.blog.51cto.com/515114/1031287</span></a></span><br /><br /></p>
      <p class="cye-lm-tag" align="left"><span class="cye-lm-tag" style="font-family: 宋体; font-size: 16px"><span class="cye-lm-tag">套用古龙武侠小说套路来说，代理服务技术是一门很古老的技术，是在互联网早期出现就使用的技术。一般实现代理技术的方式就是在服务器上安装代理服务软件，让其成为一个代理服务器，从而实现代理技术。常用的代理技术分为正向代理、反向代理和透明代理。本文就是针对这三种代理来讲解一些基本原理和具体的适用范围，便于大家更深入理解代理服务技术。</span></span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px">&nbsp;</span></p>
      <p><strong><span style="font-family: 宋体; font-size: 18pt"><span style="font-family: 宋体"><span style="font-family: Calibri">一、</span></span><span style="font-family: 宋体">正向代理</span><span style="font-family: Calibri">(Forward Proxy)</span></span></strong><br /><br /><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体">一般情况下，如果没有特别说明，代理技术默认说的是正向代理技术。关于正向代理的概念如下：</span>&nbsp;</span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体">正向代理(forward)是一个位于客户端【用户A】和原始服务器(origin server)【服务器B】之间的服务器【代理服务器Z】，为了从原始服务器取得内容，用户A向代理服务器Z发送一个请求并指定目标(服务器B)，然后代理服务器Z向服务器B转交请求并将获得的内容返回给客户端。客户端必须要进行一些特别的设置才能使用正向代理。</span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体">如下图1.1</span><br /></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><img src="http://img1.51cto.com/attachment/201210/105641260.jpg" alt="" width="717" height="312" border="0" /></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体; font-size: 16px">（图1.1）</span></span></p>
      <p class="cye-lm-tag" align="left"><span style="font-family: 宋体; font-size: 16px">从上面的概念中，我们看出，文中所谓的<span style="color: red">正向代理</span>就是<span style="color: red">代理服务器替代访问方【用户A】去访问目标服务器【服务器B】</span></span></p>
      <p class="cye-lm-tag" align="left"><span style="font-family: 宋体; font-size: 16px">这就是正向代理的意义所在。而为什么要用代理服务器去代替访问方【用户A】去访问服务器B呢？这就要从代理服务器使用的意义说起。</span></p>
      <p class="cye-lm-tag" align="left">&nbsp;</p>
      <p class="cye-lm-tag" align="left"><span style="font-family: 宋体; font-size: 16px">使用正向代理服务器作用主要有以下几点：</span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px">1、访问本无法访问的服务器B</span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px">如下图1.2</span></p>
      <p><span style="font-size: 16px"><span class="cye-lm-tag" style="font-family: 宋体"><span class="cye-lm-tag"><img src="http://img1.51cto.com/attachment/201210/105737336.jpg" alt="" width="713" height="369" border="0" /></span></span></span></p>
      <p><span style="font-size: 16px"><span class="cye-lm-tag" style="font-family: 宋体"><span class="cye-lm-tag"><span style="font-family: 宋体">（图1.2）</span>&nbsp;</span></span></span></p>
      <p><span style="font-size: 16px"><span class="cye-lm-tag" style="font-family: 宋体"><span class="cye-lm-tag"><span style="font-family: 宋体">我们抛除复杂的网络路由情节来看图1.2，假设图中路由器从左到右命名为R1,R2</span><span style="font-family: 宋体">假设最初用户A要访问服务器B需要经过R1和R2路由器这样一个路由节点，如果路由器R1或者路由器R2发生故障，那么就无法访问服务器B了。但是如果用户A让代理服务器Z去代替自己访问服务器B，由于代理服务器Z没有在路由器R1或R2节点中，而是通过其它的路由节点访问服务器B，那么用户A就可以得到服务器B的数据了。</span><span style="font-family: 宋体">现实中的例子就是“FQ”。不过自从VPN技术被广泛应用外，“FQ”不但使用了传统的正向代理技术，有的还使用了VPN技术</span><span style="font-family: 宋体">。</span><br /><br /><span style="font-family: 宋体">2、加速访问服务器B</span><br /><br /><span style="font-family: 宋体"><span style="font-family: 宋体">这种说法目前不像以前那么流行了，主要是带宽流量的飞速发展。早期的正向代理中，很多人使用正向代理就是提速。还是如图<span style="font-family: Calibri">1.2</span></span>&nbsp;<span style="font-family: 宋体">假设用户</span><span style="font-family: Calibri">A</span><span style="font-family: 宋体">到服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">，经过</span><span style="font-family: Calibri">R1</span><span style="font-family: 宋体">路由器和</span><span style="font-family: Calibri">R2</span><span style="font-family: 宋体">路由器，而</span><span style="font-family: Calibri">R1</span><span style="font-family: 宋体">到</span><span style="font-family: Calibri">R2</span><span style="font-family: 宋体">路由器的链路是一个低带宽链路。而用户</span><span style="font-family: Calibri">A</span><span style="font-family: 宋体">到代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">，从代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">到服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">都是高带宽链路。那么很显然就可以加速访问服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">了。</span></span><br /><br /><span style="font-family: 宋体"><span style="font-family: 宋体">3、Cache作用</span></span><br /><span style="font-family: 宋体"><span style="font-family: 宋体"><span style="font-family: Calibri">Cache</span><span style="font-family: 宋体">（缓存）技术和代理服务技术是紧密联系的（不光是正向代理，反向代理也使用了</span><span style="font-family: Calibri">Cache</span><span style="font-family: 宋体">（缓存）技术。还如上图所示，如果在用户</span><span style="font-family: Calibri">A</span><span style="font-family: 宋体">访问服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">某数据</span><span style="font-family: Calibri">J</span><span style="font-family: 宋体">之前，已经有人通过代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">访问过服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">上得数据</span><span style="font-family: Calibri">J</span><span style="font-family: 宋体">，那么代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">会把数据</span><span style="font-family: Calibri">J</span><span style="font-family: 宋体">保存一段时间，如果有人正好取该数据</span><span style="font-family: Calibri">J</span><span style="font-family: 宋体">，那么代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">不再访问服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">，而把缓存的数据</span><span style="font-family: Calibri">J</span><span style="font-family: 宋体">直接发给用户</span><span style="font-family: Calibri">A</span><span style="font-family: 宋体">。这一技术在</span><span style="font-family: Calibri">Cache</span><span style="font-family: 宋体">中术语就叫</span><span style="font-family: Calibri">Cache</span><span style="font-family: 宋体">命中。如果有更多的像用户</span><span style="font-family: Calibri">A</span><span style="font-family: 宋体">的用户来访问代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">，那么这些用户都可以直接从代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">中取得数据</span><span style="font-family: Calibri">J</span><span style="font-family: 宋体">，而不用千里迢迢的去服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">下载数据了。</span></span></span></span></span></span></p>
      <p><span style="font-size: 16px"><span class="cye-lm-tag" style="font-family: 宋体"><span class="cye-lm-tag"><br /><span style="font-family: 宋体"><span style="font-family: 宋体"><span style="font-family: 宋体">4、客户端访问授权</span></span></span><br /></span></span><span style="font-family: 宋体"><span style="font-family: 宋体"><span style="font-family: 宋体">这方面的内容现今使用的还是比较多的，例如一些公司采用</span><span style="font-family: Calibri">ISA SERVER</span><span style="font-family: 宋体">做为正向代理服务器来授权用户是否有权限访问互联网</span></span></span></span></p>
      <p><span style="font-size: 16px"><span style="font-family: 宋体"><span style="font-family: 宋体"><span style="font-family: 宋体">如下图</span><span style="font-family: Calibri">1.3</span></span></span></span></p>
      <p><span style="font-size: 16px"><span style="font-family: 宋体"><img src="http://img1.51cto.com/attachment/201210/105935673.jpg" alt="" width="706" height="398" border="0" /></span></span></p>
      <p><span style="font-size: 16px"><span style="font-family: 宋体"><span style="font-family: 宋体">（图1.3</span></span></span><span style="font-size: 16px"><span style="font-family: 宋体"><span>）</span></span></span></p>
      <p><span style="font-size: 16px"><span style="font-family: 宋体"><span>图1.3防火墙作为网关，用来过滤外网对其的访问。假设用户A和用户B都设置了代理服务器，用户A允许访问互联网，而用户B不允许访问互联网（这个在代理服务器Z上做限制）这样用户A因为授权，可以通过代理服务器访问到服务器B，而用户B因为没有被代理服务器Z授权，所以访问服务器B时，数据包会被直接丢弃。</span></span></span></p>
      <p><br /><span style="font-family: 宋体; font-size: 16px">5、隐藏访问者的行踪</span><br /><br /><span style="font-size: 16px"><span class="cye-lm-tag" style="font-family: 宋体"><span class="cye-lm-tag"><span class="cye-lm-tag" style="font-family: 宋体">如下图<span style="font-family: Calibri">1.4&nbsp;</span><span style="font-family: 宋体">我们可以看出服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">并不知道访问自己的实际是用户</span><span style="font-family: Calibri">A</span><span style="font-family: 宋体">，因为代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">代替用户</span><span style="font-family: Calibri">A</span><span style="font-family: 宋体">去直接与服务器</span><span style="font-family: Calibri">B</span><span style="font-family: 宋体">进行交互。如果代理服务器</span><span style="font-family: Calibri">Z</span><span style="font-family: 宋体">被用户</span><span style="font-family: Calibri">A</span><span style="font-family: 宋体">完全控制（或不完全控制），会惯以“肉鸡”术语称呼。</span></span>&nbsp;</span></span></span><span style="font-size: 16px"><span style="font-family: 宋体"><img src="http://img1.51cto.com/attachment/201210/110037136.jpg" alt="" width="713" height="269" border="0" /></span></span></p>
      <p><span style="font-size: 16px"><span style="font-family: 宋体">（图1.4）</span></span></p>
      <p><span style="font-size: 16px">&nbsp;<span style="font-family: 宋体">我们总结一下 正向代理是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端必须设置正向代理服务器，当然前提是要知道正向代理服务器的IP地址，还有代理程序的端口。</span></span><br /><br /><strong><span style="font-family: 宋体; font-size: 18pt"><span style="font-family: 宋体"><span style="font-family: Calibri">二、</span></span><span style="font-family: 宋体">反向代理（</span><span style="font-family: Calibri">reverse proxy</span><span style="font-family: 宋体">）</span></span></strong></p>
      <p><br /><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体">反向代理正好与正向代理相反，对于客户端而言代理服务器就像是原始服务器，并且客户端不需要进行任何特别的设置。客户端向反向代理的命名空间</span><span style="font-family: Calibri">(name-space)</span><span style="font-family: 宋体">中的内容发送普通请求，接着反向代理将判断向何处</span><span style="font-family: Calibri">(</span><span style="font-family: 宋体">原始服务器</span><span style="font-family: Calibri">)</span><span style="font-family: 宋体">转交请求，并将获得的内容返回给客户端。</span><span style="font-family: Calibri">&nbsp;</span><span style="font-family: 宋体">使用反向代理服务器的作用如下：</span></span><br /><span style="font-family: 宋体; font-size: 16px">1、保护和隐藏原始资源服务器</span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体">如下图</span><span style="font-family: Calibri">2.1</span>&nbsp;</span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><img src="http://img1.51cto.com/attachment/201210/110207878.jpg" alt="" width="701" height="279" border="0" /></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-size: 16px"><span style="font-family: 宋体">（图</span>2.1<span style="font-family: 宋体">）</span></span></span></p>
      <p><span style="font-size: 16px"><span style="font-family: 宋体">用户</span>A<span style="font-family: 宋体">始终认为它访问的是原始服务器</span>B<span style="font-family: 宋体">而不是代理服务器</span>Z<span style="font-family: 宋体">，但实用际上反向代理服务器接受用户</span>A<span style="font-family: 宋体">的应答，从原始资源服务器</span>B<span style="font-family: 宋体">中取得用户</span>A<span style="font-family: 宋体">的需求资源，然后发送给用户</span>A<span style="font-family: 宋体">。由于防火墙的作用，只允许代理服务器</span>Z<span style="font-family: 宋体">访问原始资源服务器</span>B<span style="font-family: 宋体">。尽管在这个虚拟的环境下，防火墙和反向代理的共同作用保护了原始资源服务器</span>B<span style="font-family: 宋体">，但用户</span>A<span style="font-family: 宋体">并不知情。</span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><br /><span style="color: #000000">2、负载均衡</span></span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><span style="color: #000000"><span style="font-family: 宋体">如图</span><span style="font-family: Calibri">2.2</span></span></span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><span style="color: #000000"><span style="font-family: Calibri"><img src="http://img1.51cto.com/attachment/201210/110311352.jpg" alt="" width="711" height="419" border="0" /></span></span></span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><span style="color: #000000"><span style="font-family: Calibri">（<span style="font-size: 16px"><span style="font-family: 宋体">图</span>2.2<span style="font-family: 宋体">）</span></span></span></span></span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><span style="color: #000000"><span style="font-family: Calibri"><span style="font-size: 16px"><span style="font-family: 宋体">当反向代理服务器不止一个的时候，我们甚至可以把它们做成集群，当更多的用户访问资源服务器</span>B<span style="font-family: 宋体">的时候，让不同的代理服务器</span>Z<span style="font-family: 宋体">（</span>x<span style="font-family: 宋体">）去应答不同的用户，然后发送不同用户需要的资源。</span></span></span></span></span></span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px"><span style="font-family: 宋体">当然反向代理服务器像正向代理服务器一样拥有</span>CACHE<span style="font-family: 宋体">的作用，它可以缓存原始资源服务器</span>B<span style="font-family: 宋体">的资源，而不是每次都要向原始资源服务器</span>B<span style="font-family: 宋体">请求数据，特别是一些静态的数据，比如图片和文件，如果这些反向代理服务器能够做到和用户</span>X<span style="font-family: 宋体">来自同一个网络，那么用户</span>X<span style="font-family: 宋体">访问反向代理服务器</span>X<span style="font-family: 宋体">，就会得到很高质量的速度。这正是</span>CDN<span style="font-family: 宋体">技术的核心。</span></span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px"><span style="font-family: 宋体">如下图</span>2.3</span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px"><img src="http://img1.51cto.com/attachment/201210/110403848.jpg" alt="" border="0" /></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><span style="color: #000000"><span style="font-family: Calibri"><span style="font-size: 16px"><span style="font-family: 宋体">（图</span>2.3<span style="font-family: 宋体">）</span></span></span></span></span></span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px"><span style="font-family: 宋体">我们并不是讲解</span>CDN<span style="font-family: 宋体">，所以去掉了</span>CDN<span style="font-family: 宋体">最关键的核心技术智能</span>DNS<span style="font-family: 宋体">。只是展示</span>CDN<span style="font-family: 宋体">技术实际上利用的正是反向代理原理这块。</span></span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px"><span style="font-family: 宋体">反向代理结论与正向代理正好相反，对于客户端而言它就像是原始服务器，并且客户端不需要进行任何特别的设置。客户端向反向代理的命名空间</span>(name-space)<span style="font-family: 宋体">中的内容发送普通请求，接着反向代理将判断向何处</span>(<span style="font-family: 宋体">原始服务器</span>)<span style="font-family: 宋体">转交请求，并将获得的内容返回给客户端，就像这些内容原本就是它自己的一样。</span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><span style="color: #000000"><span style="font-family: Calibri"><br /><span style="font-family: 宋体">基本上，网上做正反向代理的程序很多，能做正向代理的软件大部分也可以做反向代理。开源软件中最流行的就是</span><span style="font-family: 宋体">s</span>quid<span style="font-family: 宋体">，既可以做正向代理，也有很多人用来做反向代理的前端服务器。另外</span>MS ISA<span style="font-family: 宋体">也可以用来在</span>WINDOWS<span style="font-family: 宋体">平台下做正向代理。反向代理中最主要的实践就是</span>WEB<span style="font-family: 宋体">服务，近些年来最火的就是</span>Nginx<span style="font-family: 宋体">了。网上有人说</span>NGINX<span style="font-family: 宋体">不能做正向代理，其实是不对的。</span>NGINX<span style="font-family: 宋体">也可以做正向代理，不过用的人比较少了。</span><br /><br /><strong><span style="font-family: 宋体; font-size: 18pt"><span style="font-family: 宋体"><span style="font-family: Calibri">三、</span></span><span style="font-family: 宋体">透明代理</span></span></strong><br /><br /><span style="font-family: 宋体"><span style="font-family: 宋体"><span style="font-family: 宋体">如果把正向代理、反向代理和透明代理按照人类血缘关系来划分的话。那么正向代理和透明代理是很明显堂亲关系，而正向代理和反向代理就是表亲关系了</span><span style="font-family: Calibri">&nbsp;</span><span style="font-family: 宋体">。</span></span></span><br /><span style="font-family: 宋体"><span style="font-family: 宋体"><span style="font-family: 宋体">透明代理的意思是客户端根本不需要知道有代理服务器的存在，它改编你的</span><span style="font-family: Calibri">request fields</span><span style="font-family: 宋体">（报文），并会传送真实</span><span style="font-family: Calibri">IP</span><span style="font-family: 宋体">。注意，加密的透明代理则是属于匿名代理，意思是不用设置使用代理了。</span><span style="font-family: Calibri">&nbsp;</span><span style="font-family: 宋体">透明代理实践的例子就是时下很多公司使用的行为管理器。</span><span style="font-family: Calibri"><br /></span></span></span></span></span></span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><span style="color: #000000"><span style="font-family: Calibri"><span style="font-family: 宋体"><span style="font-family: 宋体"><span style="font-family: Calibri"><img src="http://img1.51cto.com/attachment/201210/110500391.jpg" alt="" width="715" height="388" border="0" /></span></span></span></span></span></span></span></p>
      <p><span style="font-family: 宋体; font-size: 16px"><span style="font-family: 宋体"><span style="color: #000000"><span style="font-family: Calibri"><span style="font-family: 宋体">（图</span>3.1<span style="font-family: 宋体">）</span><br /></span></span></span></span></p>
      <p class="cye-lm-tag" align="left"><span style="font-size: 16px"><span style="font-family: 宋体">用户</span>A<span style="font-family: 宋体">和用户</span>B<span style="font-family: 宋体">并不知道行为管理设备充当透明代理行为，当用户</span>A<span style="font-family: 宋体">或用户</span>B<span style="font-family: 宋体">向服务器</span>A<span style="font-family: 宋体">或服务器</span>B<span style="font-family: 宋体">提交请求的时候，透明代理设备根据自身策略拦截并修改用户</span>A<span style="font-family: 宋体">或</span>B<span style="font-family: 宋体">的报文，并作为实际的请求方，向服务器</span>A<span style="font-family: 宋体">或</span>B<span style="font-family: 宋体">发送请求，当接收信息回传，透明代理再根据自身的设置把允许的报文发回至用户</span>A<span style="font-family: 宋体">或</span>B<span style="font-family: 宋体">，如上图，如果透明代理设置不允许访问服务器</span>B<span style="font-family: 宋体">，那么用户</span>A<span style="font-family: 宋体">或者用户</span>B<span style="font-family: 宋体">就不会得到服务器</span>B<span style="font-family: 宋体">的数据。</span></span></p>
      <p><span style="font-size: 16px">&nbsp;</span></p>
     </div>
     <div id="MySignature"></div>
    </div>
    <p></p> 
   </div> 
  </article> 
  <div id="top"> 
   <img src="images/2014/m/top_icon_31x11.png" id="goTopBtn" title="返回顶部" alt="返回顶部" /> 
  </div> 
  <div class="computer"> 
   <a href="http://www.fx114.net/qa-13-150238.aspx" target="_blank">查看电脑版</a> 
  </div> 
  <footer> 
   <p class="fontArial">Copyright &copy;2017 <a href="http://m.fx114.net/" title="分享查询网">分享查询网</a> All rights reserved.</p> 
  </footer> 
  <div style="display:none;"> 
   <script>
        var _hmt = _hmt || [];
        (function () {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?b41e21aaf49ad2eda6b7f39b8d1dd98e";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
</script> 
  </div>  
 </body>
</html>