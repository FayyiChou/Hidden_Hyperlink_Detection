<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
  <title>Linux网管笔记（32）：Linux下的VPN服务器轻松打造</title> 
  <meta name="keywords" content="Linux网管笔记（32）：Linux下的VPN服务器轻松打造,MagicSite" /> 
  <meta name="description" content="Linux网管笔记（32）：Linux下的VPN服务器轻松打造,MagicSite" /> 
  <meta http-equiv="pragma" content="no-cache" /> 
  <meta http-equiv="cache-control" content="no-cache" /> 
  <meta http-equiv="expires" content="0" /> 
  <meta http-equiv="keywords" content="" /> 
  <meta http-equiv="description" content="" /> 
  <link rel="stylesheet" type="text/css" href="/css/a.css" /> 
  <script type="text/javascript" src="/scripts/a.js"></script> 
  <script type="text/javascript" src="/scripts/b.js"></script> 
  <style>
a {
	TEXT-DECORATION: none
}

a:hover {
	TEXT-DECORATION: underline
}
</style> 
 </head> 
 <body> 
  <div id="main"> 
   <div id="header"> 
    <div id="logo_1"> 
     <script src="/js/head-logo.js" type="text/javascript"></script> 
    </div> 
    <div id="logo_head_ad"> 
     <script src="/adjs/adhead1.js" type="text/javascript"></script> 
    </div> 
   </div> 
   <div class="search_space"> 
    <script src="/adjs/search.js" type="text/javascript"></script> 
   </div> 
   <div id="nav"> 
    <div id="left1"> 
     <script src="/adjs/adleft1.js" type="text/javascript"></script> 
    </div> 
    <div id="left2"> 
     <script src="/adjs/adleft2.js" type="text/javascript"></script> 
    </div> 
    <div id="left3"> 
     <script src="/adjs/adleft3.js" type="text/javascript"></script> 
    </div> 
    <div id="left4"> 
     <script src="/adjs/adleft4.js" type="text/javascript"></script> 
    </div> 
    <div id="left5"> 
     <script src="/adjs/adleft5.js" type="text/javascript"></script> 
    </div> 
   </div> 
   <div id="section"> 
    <div id="headAd"> 
     <script src="/adjs/adhead2.js" type="text/javascript"></script> 
    </div> 
    <div id="headAd1"> 
     <script src="/adjs/adhead3.js" type="text/javascript"></script> 
    </div> 
    <div class="space"> 
     <script src="/adjs/space.js" type="text/javascript"></script> 
    </div> 
    <div class="main_content"> 
     <div class="main_content_body"> 
      <h1>Linux网管笔记（32）：Linux下的VPN服务器轻松打造</h1> 
      <div id="article_content" class="article_content"> 
       <p>&nbsp;&nbsp;&nbsp; 最近，有个朋友老是问VPN的事情。结合我的体会，算是给他准备一个专题文章吧。</p> 
       <h2><strong>1.到底什么是VPN</strong></h2> &lt;script type=&quot;text/javascript&quot;&gt;&lt;!-- google_ad_client = &quot;pub-4255855009993786&quot;; /* 728x15, 创建于 09-11-4 */ google_ad_slot = &quot;0102499238&quot;; google_ad_width = 728; google_ad_height = 15; //--&gt; &lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://pagead2.googlesyndication.com/pagead/show_ads.js&quot;&gt; &lt;/script&gt; 
       <p><b>VPN的英文全称是“Virtual Private Network”，翻译过来就是“虚拟专用网络”。顾名思义，虚拟专用网络我们可以把它理解成是虚拟出来的企业内部专线。</b>它可以通过特殊的加密的通讯协议在连接在Internet上的位于不同地方的两个或多个企业内部网之间建立一条专有的通讯线路，就好比是架设了一条专线一样，但是它并不需要真正的去铺设光缆之类的物理线路。这就好比去电信局申请专线，但是不用给铺设线路的费用，也不用购买路由器等硬件设备。VPN技术原是路由器具有的重要技术之一，目前在交换机，防火墙设备或Windows 2000/XP/Vista等软件里也都支持VPN功能，一句话，VPN的核心就是在<u>利用公共网络建立虚拟私有网</u>。</p> 
       <p><img width="500" height="300" style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://publish.it168.com/2007/0115/images/273535.jpg" /></p> 
       <p><b>虚拟专用网（VPN）被定义为通过一个公用网络（通常是因特网）建立一个临时的、安全的连接，是一条穿过混乱的公用网络的安全、稳定的隧道。</b>虚拟专用网是对企业内部网的扩展。虚拟专用网可以帮助远程用户、公司分支机构、商业伙伴及供应商同公司的内部网建立可信的安全连接，并保证数据的安全传输。虚拟专用网可用于不断增长的移动用户的全球因特网接入，以实现安全连接；可用于实现企业网站之间安全通信的虚拟专用线路，用于经济有效地连接到商业伙伴和用户的安全外联网虚拟专用网。</p> 
       <p>针对不同的用户要求，VPN有三种解决方案：<b>远程访问虚拟网（Access VPN）、企业内部虚拟网（Intranet VPN）和企业扩展虚拟网（Extranet VPN），</b>这三种类型的VPN分别与传统的远程访问网络、企业内部的Intranet以及企业网和相关合作伙伴的企业网所构成的Extranet（外部扩展）相对应。</p> 
       <h2><strong>2.VPN的主要安全保证技术</strong></h2> 
       <p></p> 
       <p>VPN主要采用隧道技术、加解密技术、密钥管理技术和使用者与设备身份认证技术。</p> 
       <p>IPSec VPN最大的难点在于客户端需要安装复杂的软件，而且当用户的VPN策略稍微有所改变时，VPN的管理难度将呈几何级数增长。SSL VPN则正好相反，客户端不需要安装任何软件或硬件，使用标准的浏览器，就可通过简单的SSL安全加密协议，安全地访问网络中的信息。</p> 
       <h2><strong>3.Linux下构建免费的VPN测试（注意是免费的）</strong></h2> 
       <p>VPN(VirtualPrivateNetwork，虚拟专用网络)是专用网络的延伸，它可以通过共享Internet或公共网络连接模拟点对点专用连接的方式，在本地计算机和远程计算机之间发送数据。下面是一种快速构建VPN服务器的方法。 <br /><b>安装软件</b> <br />（1）安装PPP <br />安装PPP（Point-to-PointProtocol，点到点协议）2.4.2以上的版本，可以到http://sourceforge.net/project/showfiles.php?group_id=44827下载ppp-2.4.3-0.cvs_20040527.1.i386.rpm软件包。 <br />安装命令如下： <br /><u>#rpm-Uvhppp-2.4.3-0.cvs_20040527.1.i386.rpm <br /></u>（2）安装内核MPPE补丁 <br />安装内核MPPE（MicrosoftPointtoPointEncryption，微软点对点加密）补丁需要根据内核选择相应的版本。笔者使用的Linux内核是2.4.20-31.9版本，可以到http://pptpclient.sourceforge.net/mppe/kernel-mppe-2.4.20-31.9.i686.rpm下载相应的kernel-mppe-2.4.20-31.9.i686.rpm软件包。安装命令如下： <br /><u>#rpm-ivhkernel-mppe-2.4.20-31.9.i686.rpm</u> <br />用以下命令检查内核MPPE补丁是否安装成功： <br /><u>#modprobeppp-compress-18 <br /></u>（3）检查PPP是否支持MPPE <br />用以下命令检查PPP是否支持MPPE： <br />#strings'/usr/sbin/pppd'|grep-imppe|wc--lines <br />如果以上命令输出为“0”则表示不支持；输出为“30”或更大的数字就表示支持。 <br />（40安装PPTPD <br />到http://sourceforge.net/project/showfiles.php?group_id=44827下载pptpd-1.1.4-b4.i386.rpm软件包，并安装。 <br />#rpm-ivhpptpd-1.1.4-b4.i386.rpm <br /><b>修改配置文件</b> <br />1.修改modules.conf文件 <br />编辑/etc/modules.conf配置文件，加入如下内容： <br />aliasnet-pf-47ip_gre <br />2.修改pptpd.conf文件 <br />编辑/etc/pptpd.conf配置文件，添加如下内容，确定本地VPN服务器的IP地址和客户端登录后分配的IP地址范围。 <br />debug <br />option/etc/ppp/options.pptpd <br />localip192.168.0.254#本地VPN服务器的IP <br />remoteip192.168.1.1-254 #客户端被分配的IP范围 <br />3.修改options.pptpd文件 <br />编辑/etc/ppp/options.pptpd配置文件，替换成如下内容： <br />auth <br />lock <br />debug <br />proxyarp <br />lock <br />namerh9vpn#VPN服务器的名字 <br />multilink <br />refuse-pap <br />refuse-chap <br />refuse-mschap <br />refuse-eap <br />refuse-mschap-v2 <br />require-mppe <br />ms-wins192.168.1.2#把想要在网络邻居中看到的机器的IP填写到这里 <br />ms-dns192.168.1.2#DNS服务器地址 <br />dump <br />logfile/var/log/pptpd.log #日志存放的路径 <br />（4）修改chap-secrets文件 <br />编辑/etc/chap-secrets配置文件，添加如下内容： <br />#clientserversecretIPaddresses <br />&quot;test@gd.cn&quot;* &quot;test&quot; * <br />上面第二行代码的四项内容分别对应第一行中的四项。“test@gd.cn”是Client端的VPN用户名；“server”对应的是VPN服务器的名字，该名字必须和/etc/ppp/options.pptpd文件中指明的一样，或者设置成“*”号来表示自动识别服务器；“secret”对应的是登录密码；“IPaddresses”对应的是可以拨入的客户端IP地址，如果不需要做特别限制，可以将其设置为“*”号。 <br />（5）设置IP伪装转发 <br />只有设置了IP伪装转发，通过VPN连接上来的远程计算机才能互相ping通，实现像局域网那样的共享。用下面的命令进行设置： <br />#echo1&gt;/proc/sys/net/ipv4/ip_forward <br />可以将这条命令放到文件/etc/rc.d/rc.local里面，以实现每次开机时自动运行该命令。 <br />（6）打开防火墙端口 <br />将Linux服务器的1723端口和47端口打开，并打开GRE协议。 <br />#/sbin/iptables-AINPUT-ptcp--dport1723-jACCEPT <br />#/sbin/iptables-AINPUT-ptcp--dport47-jACCEPT <br />#/sbin/iptables-AINPUT-pgre-jACCEPT <br />到这里Linux服务器的设置就完成了，下面将利用Windows客户端进行测试。 <br /><b>4.利用Windows客户端进行VPN测试</b> <br />下面以WindowsServer2003为例来进行测试。 <br />（1）新建连接 <br />单击“开始→设置→网络和拨号连接”打开“网络和拨号连接”的窗口，再单击“新建连接”打开“网络连接向导”的窗口，然后依次选择或填写“连接到我的工作场所网络→虚拟专用网络连接→公司名（可以随便填写）→不拨初始连接→IP地址（填入VPN服务器的IP地址）”，最后单击“确定”，就建立了一个新的连接。 <br />（2）修改连接属性 <br />右击刚才创建的连接，再依次单击“属性→网络（选择TCP/IP协议）→属性→高级”，然后把“在远程网络上使用默认网关”前面的勾去掉后单击“确定”。 <br />（3）建立连接 <br />双击刚才建立好的连接，填入提前设置好的用户名和密码，单击“确定”进行连接。如果连接成功，在连接的“详细信息”里应该可以看到服务器所分配的IP地址等信息。这时，就可以跟连接进入的局域网里的其它计算机进行通信了。 <br />如果客户端使用的仍然是Windows95或Windows98，则需要到<a href="http://support.microsoft.com/support/kb/articles/q285/1/89.asp">http://support.microsoft.com/support/kb/articles/q285/1/89.asp</a>下载相关的拨号程序。 </p> 
       <p>再发一个例子。</p> 
       <p><img width="500" height="300" style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://www.52codes.com/upload/pc_arc/200907/20090703107800147.jpg" /></p> 
       <p><img width="500" height="300" style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://img.zdnet.com.cn/1/71/liA11LaIiSI.jpg" /></p> 
       <p></p> 
       <h2>4.对SSL VPN的进一步研究</h2> 
       <p>首先，我们先认识一下IPSEC存在的不足之处:</p> 
       <p>在设计上，IPSec VPN是一种基础设施性质的安全技术。这类VPN的真正价值在于，它们尽量提高IP环境的安全性。可问题在于，部署IPSec需要对基础设施进行重大改造，以便远程访问。好处就摆在那里，但管理成本很高。IPSec安全协议方案需要大量的IT技术支持，包括在运行和长期维护两个方面。在大的企业通常有几个专门的员工为通过IPSec安全协议进行的VPN远程访问提供服务。IPSec VPN最大的难点在于<u>客户端需要安装复杂的软件</u>，而且当用户的VPN策略稍微有所改变时，VPN的管理难度将呈几何级数增长。<u>SSL VPN则正好相反，客户端不需要安装任何软件或硬件，使用标准的浏览器，就可通过简单的SSL安全加密协议，安全地访问网络中的信息。</u></p> 
       <p>其次，再看看SSL的优势特点:</p> 
       <p>SSL VPN避开了部署及管理必要客户软件的复杂性和人力需求;SSL在Web的易用性和安全性方面架起了一座桥梁，目前对SSL VPN公认的三大好处是:</p> 
       <p>第一来自于它的简单性，它不需要配置，可以立即安装、立即生效;</p> 
       <p>第二个好处是客户端不需要麻烦的安装，直接利用浏览器中内嵌的SSL协议就行;</p> 
       <p>第三个好处是兼容性好，传统的IPSec VPN对客户端采用的操作系统版本具有很高的要求，不同的终端操作系统需要不同的客户端软件，而SSL VPN则完全没有这样的麻烦。</p> 
       <p align="center">&lt;script type=&quot;text/javascript&quot;&gt;&lt;!-- google_ad_client = &quot;pub-4255855009993786&quot;; /* 468x60, 创建于 09-11-4 */ google_ad_slot = &quot;1808760598&quot;; google_ad_width = 468; google_ad_height = 60; //--&gt; &lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://pagead2.googlesyndication.com/pagead/show_ads.js&quot;&gt; &lt;/script&gt;</p> 
       <p>综合分析可见:</p> 
       <p>第一，SSL VPN强调的优势其实主要集中在VPN客户端的部署和管理上，我们知道SSL VPN一再强调无需安装客户端，主要是由于浏览器内嵌了SSL协议，也就是说是基于B/S结构的业务时，可以直接使用浏览器完成SSL的VPN建立;</p> 
       <p>第二，某些SSL VPN厂商如F5有类似IPSec VPN的“网络访问”方式，可以解决传统的C/S应用程序的问题，用户用浏览器登录SSL VPN设备后，拨通网络访问资源即可获得一个虚拟IP，即可以访问按照安全策略允许访问的内网地址和端口，和IPSec VPN不同的是，这种方式并非工作在网络层，所以不会有接入地点的限制;</p> 
       <p>第三，SSL安全通道是在客户到所访问的资源之间建立的，确保点到点的真正安全。无论在内部网络还是在因特网上数据都不是透明的，客户对资源的每一次操作都需要经过安全的身份验证和加密。</p> 
       <p>第四，若是采取SSL VPN来联机，因为是直接开启应用系统，并没在网络层上连接，黑客不易侦测出应用系统内部网络设置，同时黑客攻击的也只是VPN服务器，无法攻击到后台的应用服务器，攻击机会相对就减少。有的厂商如F5公司的产品，可以对客户端允许访问的地址、协议、端口都加以限制;可以对客户端做各种检查，如操作系统补丁、防病毒软件及病毒库更新时间、个人防火墙等等，不符合条件的客户端可以不允许其登录，这样就大大增加了整个系统的安全性。</p> 
       <p>第五，对于SSL VPN的联机，病毒传播会局限于这台主机，而且这个病毒必须是针对应用系统的类型，不同类型的病毒是不会感染到这台主机的。因此通过SSL VPN连接，受外界病毒感染的可能性大大减小。有的厂商如F5公司的产品，自身带有防病毒软件，更可以通过标准协议连接防病毒软件，加强对于病毒的防治。</p> 
       <p>此外，SSL VPN与IPSec VPN相比，具有更好的<em><strong>可扩展性、更细粒度、更经济。借用一下这个图形。</strong></em></p> 
       <p><img width="500" height="300" style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://net.yesky.com/imagelist/2009/247/382y2v30e952s.jpg" /></p> 
       <p>继续研究中，欢迎拍砖。</p> 
       <p align="center">&lt;script type=&quot;text/javascript&quot;&gt;&lt;!-- google_ad_client = &quot;pub-4255855009993786&quot;; /* 200x200, 创建于 09-11-4 */ google_ad_slot = &quot;0985516344&quot;; google_ad_width = 200; google_ad_height = 200; //--&gt; &lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://pagead2.googlesyndication.com/pagead/show_ads.js&quot;&gt; &lt;/script&gt;</p> 
      </div> 
     </div> 
     <hr /> 
    </div> 
    <div id="footerAd1"> 
     <script src="/adjs/adfooter1.js" type="text/javascript"></script> 
    </div> 
    <div id="footerAd2"> 
     <script src="/adjs/adfooter2.js" type="text/javascript"></script> 
    </div> 
   </div> 
   <div id="nav1"> 
    <div id="right0"> 
     <script src="/adjs/adright1.js" type="text/javascript"></script> 
    </div> 
    <div id="right1"> 
     <br /> 
     <strong>【更多文章】</strong> 
     <hr /> 
     <strong>1.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/web/Ajax/Ajax130710.html" target="_blank">（网管笔记33）前言 一个和牢骚有关的话题</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>2.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/Windows/Windows/Windows130709.html" target="_blank">（网管学习笔记34）虚拟机应用Virtual PC，VMware和VirtualBox</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>3.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/other/other130708.html" target="_blank">rh401 - RPM编包示例 - 一份Makefile文件和与之对应hello.spec文件</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>4.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/Linux-Unix/Linux/Linux130707.html" target="_blank">rh401 - rpmbuild更改BuildArch后碰到错误（error: Arch dependent binaries in noarch package）</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>5.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/Linux-Unix/Linux/Linux130706.html" target="_blank">RH442 - 通过cgroup来限制kvm虚拟机只使用host的某个cpu和内存大小</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>6.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/Linux-Unix/Linux/Linux130712.html" target="_blank">Linux网管笔记（30）linux后门乃至安全管理的一些梳理</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>7.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/Linux-Unix/Linux/Linux130713.html" target="_blank">Linux网管笔记（29）Ubuntu Linux服务器网络配置过程</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>8.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/DB/Oracle/Oracle130714.html" target="_blank">Linux网管笔记（28）安装Oracle及command not found 解决方法</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>9.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/Linux-Unix/Linux/Linux130715.html" target="_blank">Linux网管笔记（27）两个典型Linux乱码问题的解决</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
     <strong>10.&nbsp;</strong>
     <a href="http://www.magicsite.cn/blog/Linux-Unix/Linux/Linux130716.html" target="_blank">Linux网管学习笔记（26）Linux操作系统学习路线图</a> 
     <hr style="height: 1px; border: none; border-top: 1px dashed #0066CC;" /> 
    </div> 
    <div id="right2"> 
     <script src="/adjs/adright2.js" type="text/javascript"></script> 
    </div> 
    <div id="right3"> 
     <script src="/adjs/adright3.js" type="text/javascript"></script> 
    </div> 
    <div id="right4"> 
     <script src="/adjs/adright4.js" type="text/javascript"></script> 
    </div> 
    <div id="right5"> 
     <script src="/adjs/adright5.js" type="text/javascript"></script> 
    </div> 
   </div> 
  </div> 
  <div id="footerAd"> 
   <script src="/adjs/adfooter.js" type="text/javascript"></script> 
  </div> 
  <div id="footer">
    Copyright 2016 
   <a target="_blank" href="http://www.magicsite.cn" style="color: white; text-decoration: none;">MagicSite.cn</a> 
  </div>   
 </body>
</html>