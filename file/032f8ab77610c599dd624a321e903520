<html>
 <head> 
  <meta http-equiv="Content-Language" content="zh-cn" /> 
  <meta name="GENERATOR" content="Microsoft FrontPage 12.0" /> 
  <meta name="ProgId" content="FrontPage.Editor.Document" /> 
  <meta http-equiv="Content-Type" content="text/html; charset=gb2312" /> 
  <title>J2ME游戏开发实例讲解 - GameRes.com</title> 
  <base target="_blank" /> 
 </head> 
 <body topmargin="0" leftmargin="0" bgcolor="#000000" link="#FF9900" vlink="#FF9900" alink="#FF9900" text="#FFFFFF"> 
  <font face="Arial"> 
   <table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber1"> 
    <tbody>
     <tr> 
      <td width="100%"> <a title="中国游戏开发资源网 - GameRes.com" href="http://www.gameres.com"> <img border="0" src="../../../images/titlesmall.jpg" width="200" height="47" /></a></td> 
     </tr> 
     <tr> 
      <td width="100%">　</td> 
     </tr> 
     <tr> 
      <td width="100%"> 
       <div align="center"> 
        <center> 
         <table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" width="85%" id="AutoNumber2"> 
          <tbody>
           <tr> 
            <td width="100%" bgcolor="#151631"> <p align="right"><font size="1">dong_peng_eng&nbsp;&nbsp; </font></p></td> 
           </tr> 
           <tr> 
            <td width="100%"> <p align="center"><font size="1">&nbsp;</font><br /> <font color="#FFFFEE" size="4"> <b>J2ME游戏开发实例讲解</b></font></p></td> 
           </tr> 
           <tr> 
            <td width="100%">　</td> 
           </tr> 
           <tr> 
            <td width="100%">目录：<br /> 　　<a target="_self" href="#一、序言">一、序言</a><br /> 　　<a target="_self" href="#二、利其器">二、利其器</a><br /> 　　<a target="_self" href="#三、需求分析">三、需求分析</a><br /> 　　<a target="_self" href="#四、概要设计">四、概要设计</a><br /> 　　<a target="_self" href="#五、详细设计">五、详细设计</a><br /> 　　<a target="_self" href="#六、编码">六、编码</a><br /> 　　<a target="_self" href="#七、测试">七、测试</a><br /> 　　<a target="_self" href="#八、发布">八、发布</a><br /> 　　<a target="_self" href="#九、项目总结">九、项目总结</a><br /> <br /> <br /> <b><a name="一、序言">一、序言</a></b> <br /> <br /> 　　昨天在网上闲逛，发现一篇讲解用delphi实现华容道游戏的文章，颇受启发．于是，产生了将华容道游戏移植到手机中去的冲动．现在手机游戏琳琅满目，不一而足，华容道的实现版本也很多．正巧不久前笔者对J2ME下了一番功夫，正想借这个机会小试牛刀。选用J2ME的原因还有一个就是目前Java开发大行其到，无线增殖业务迅猛发展，J2ME的应用日渐活跃起来，也希望我的这篇文章能够为J2ME知识的普及和开发团队的壮大推波助澜。由于长期受ISO规范的影响，这次小试牛刀我也打算遵照软件工程的要求，并采取瀑布式的开发模式来规划项目，也希望借此机会向各位没有机会参与正式项目开发的读者介绍一下软件开发的流程。 <br /> <br /> 　　这里我们先定义项目组的人员体制(其实只有我一个人)：技术调研、需求分析、概要设计、详细设计、编码、测试均有笔者一人担任；美工这里我找了个捷径，盗用网上现成的图片，然后用ACDSee把它由BMP转换成PNG格式(我出于讲座的目的，未做商业应用，应该不算侵权吧)；至于发布工作，由于缺少OTA服务器，此项工作不做(但是我会介绍这步如何做)。 <br /> <br /> 　　接下来，我们规划一下项目实现的时间表，以我个人经验，设想如下：技术调研用2天(这部分解决项目的可行性和重大技术问题，时间会长一些)，需求分析用半天(毕竟有现成的东东可以参照，只要理清思路就行了，况且还有很多以前用过的设计模式和写好的代码)，概要设计再用半天(有了需求，概要只不够是照方抓药)，详细设计要用2天(这一步要把所有的问题想清楚，还要尽可能的准确描述出来)，编码用2天(其实1天就够了，技术已经不是问题，多计划出一天来应付突发事件)，测试用2天(测试应该至少占全部项目的四分之一，不过这个项目只是一个Demo，也太简单了)，发布也要用上半天(尽管我们不去实际发布它，但是还要花点时间搞清楚应该如何做)，最后就是项目总结和开庆功会(时间待定)。 <br /> <br /> <br /> <b><a name="二、利其器">二、利其器</a></b> <br /> <br /> 　　“公欲善其事，必先利其器”，做项目之前第一步是前期调研．我们要做的华容道这个东东随处可见，我们要调研的是两个方面： <br /> <br /> 　　1、游戏的内容：游戏本身很简单，就是有几个格子，曹操占据其中一个较大的格子，然后被几个格子包围，这些格子形状不一定相同，但是挡住了曹操移动的方向．游戏者需要挪动这些格子最终把曹操移动到一个指定的位置才算是过关．更具体的分析我们放在后面需求分析和概要设计中讨论。 <br /> <br /> 　　2、技术储备：谈到技术，这里简单介绍一下J2ME.Java有三个版本，分别是J2ME（微型版）.J2SE（标准版）.J2EE（企业版）．J2ME是一个标准，采用３层结构设计．最低层是配置层（Configuration）也就是设备层，其上是简表层（Profile）,再上是应用层（Application）.MIDP就是移动信息设备简表，目前主流手机支持MIDP1.0，最新的是MIDP2.0,它比前一个版本增加了对游戏的支持，在javax.microedition.lcdui.game包中提供了一些类来处理游戏中的技术，比如我们后面会用到的Sprite类，它是用来翻转图片的.权衡再三，笔者决定使用MIDP2.0来做开发．首先需要安装一个J2ME的模拟器，我们就用Sun公司的WTK2.0，我觉得Sun的东西最权威．当然你也可以使用Nokia.Siemens或是Motolora等其他模拟器，但是他们的JDK不尽相同，写出来的程序移植是比较麻烦的．Sun公司的WTK2.0可以到＜A&nbsp;href=&quot;http://here/下&quot;＞http://here/下＜/A＞载，当然要想成功下载的前提是你要先注册成为Sun的会员（其实这样对你是有好处的）．当下来之后就是按照提示一步一步的安装．安装好了之后，我们用一个&quot;Hello&nbsp;World&quot;程序开始你的J2ME之旅．我们启动WTK2.0工具集中的KToolBar，然后点击New&nbsp;Project按钮，在弹出的输入框中输入Project&nbsp;Name为HelloWorld,MIDlet&nbsp;Class&nbsp;Name为Hello,然后点击Create&nbsp;Project，开始生成项目，工具会弹出MIDP配置简表，这里接受生成的默认值（以后还可以修改）点击OK，工具提示我们把写好的Java源程序放到[WTK_HOME]\apps\HelloWorld\src目录之下．我们编辑如下代码，并保存在上述目录之下，文件名为Hello.java。 <br /> <br />  <font face="宋体" color="#99CCFF"> import&nbsp;javax.microedition.midlet.*; <br /> import&nbsp;javax.microedition.lcdui.*; <br /> public&nbsp;class&nbsp;Hello&nbsp;extends&nbsp;MIDlet <br /> { <br /> &nbsp;&nbsp;&nbsp; private&nbsp;Display&nbsp;display; <br /> &nbsp;&nbsp;&nbsp; public&nbsp;Hello(){ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; display&nbsp;=Display.getDisplay(this); <br /> &nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; public&nbsp;void&nbsp;startApp(){ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TextBox&nbsp;t&nbsp;=&nbsp;new&nbsp;TextBox(&quot;Hello&quot;,&quot;Hello&quot;,256,0); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; display.setCurrent(t); <br /> &nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; public&nbsp;void&nbsp;pauseApp(){ <br /> &nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; public&nbsp;void&nbsp;destroyApp(boolean&nbsp;unconditional){ <br /> &nbsp;&nbsp;&nbsp; } <br /> }&nbsp; </font> <font face="Arial"> <br /> <br /> 　　保存好了之后，点击Build按钮，工具会为你编译程序，如无意外再点击Run按钮，会弹出一个手机界面，剩下的就不用我教了吧（用鼠标对手机按键一顿狂点）。呵呵，你的第一个J2ME程序已经OK了.什么？你还一点都没懂呢（真是厉害，不懂都能写出J2ME程序来，果然是高手）．我这里主要是介绍WTK2.0工具的使用，程序并不是目的，不懂的话后面还会有详细的解说，这里只是带你上路．什么？你不懂Java！那也没有关系，后面我再讲得细一点。 <br /> <br /> <br /> 　　跳过J2ME，我们先来讲点游戏的理论．具体到华容道这个游戏，主要有三个方面，贴图．游戏操作．逻辑判断．这里讲讲贴图，其他两方面放在概要设计和详细设计里讲．所谓的贴图，其实就是画图，就是在要显示图形的位置上输出一副图片，（要是牵扯到动画就要麻烦一些，可以使用TimerTask.Thread或Rannable之类的技术)，这副图片可以是事先准备好的也可以是临时处理的．在J2ME中有一个Image类,专门用于管理图片，它有createImage()方法，可以直接读取图片文件（J2ME只支持PNG格式的图片），也可以截取已有的图片的一部分（这样我们可以把很多图片放在一起，然后一张一张的截下来，好处是节省存储空间和文件读取时间，对于手机这两者都是性能的瓶颈）．J2ME还有一个Graphics类，专门用于绘图，它有drawImage()方法，可以把一副图片在指定的位置上显示出来，它还有drawRect()方法和setColor()方法，这两个方法在后面我们进行游戏操作时就会用到，这里先交代一下．有了图片和绘图的方法，还需要知道把图画到谁身上，J2ME提供了一个Canvas类，字面意思就是画布，它有一个paint()方法用于刷新页面，还有一个repaint()方法用于调用paint()方法．听着有些糊涂是吧，不要紧，我来结合具体程序讲解一下．为了今后编程的方便，我们创建两个类Images和Draw,Images用于保存一些常量值和图片，Draw主要是用于画图，这两个类的源代码如下。 <br /> <br /> 　　Images类的源代码如下： <br /> <br /> </font> <font face="宋体" color="#99CCFF"> package&nbsp;huarongroad;&nbsp; <br /> import&nbsp;javax.microedition.lcdui.*; <br /> import&nbsp;javax.microedition.lcdui.game.*; <br /> <br /> public&nbsp;class&nbsp;Images&nbsp;{//保存常量 <br /> &nbsp;&nbsp;&nbsp; //绘图位置常量 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;int&nbsp;UNIT&nbsp;=&nbsp;32;//方块的单位长度 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;int&nbsp;LEFT&nbsp;=&nbsp;10;//画图的左边界顶点 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;int&nbsp;TOP&nbsp;=&nbsp;9;//画图的上边界顶点 <br /> &nbsp;&nbsp;&nbsp; //地图位置常量 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;int&nbsp;WIDTH&nbsp;=&nbsp;4;//地图的宽度 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;int&nbsp;HEIGHT&nbsp;=&nbsp;5;//地图的高度 <br /> &nbsp;&nbsp;&nbsp; //地图标记常量 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;CAOCAO&nbsp;=&nbsp;(byte)&nbsp;'a';&nbsp;＜A&nbsp;href=&quot;file://曹&quot;＞file://曹＜/A＞操的地图标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;MACHAO&nbsp;=&nbsp;(byte)&nbsp;'b';//马超的地图标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;HUANGZHONG&nbsp;=&nbsp;(byte)&nbsp;'c';//黄忠的地图标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;GUANYU&nbsp;=&nbsp;(byte)&nbsp;'d';//关羽的地图标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;ZHANGFEI&nbsp;=&nbsp;(byte)&nbsp;'e';//张飞的地图标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;ZHAOYUN&nbsp;=&nbsp;(byte)&nbsp;'f';//赵云的地图标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;ZU&nbsp;=&nbsp;(byte)&nbsp;'g';//卒的地图标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;BLANK&nbsp;=&nbsp;(byte)&nbsp;'h';//空白的地图标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;CURSOR&nbsp;=&nbsp;(byte)&nbsp;'i';//光标的地图标记 <br /> &nbsp;&nbsp;&nbsp; //地图组合标记常量 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;DLEFT&nbsp;=&nbsp;(byte)&nbsp;'1';&nbsp;＜A&nbsp;href=&quot;file://组&quot;＞file://组＜/A＞合图形左边标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;DUP&nbsp;=&nbsp;(byte)&nbsp;'2';&nbsp;＜A&nbsp;href=&quot;file://组&quot;＞file://组＜/A＞合图形上边标记 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;final&nbsp;byte&nbsp;DLEFTUP&nbsp;=&nbsp;(byte)&nbsp;'3';&nbsp;＜A&nbsp;href=&quot;file://组&quot;＞file://组＜/A＞合图形左上标记 <br /> &nbsp;&nbsp;&nbsp; //图片常量 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_base;//基本图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Zhaoyun;//赵云的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Caocao;//曹操的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Huangzhong;//黄忠的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Machao;//马超的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Guanyu;//关羽的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Zhangfei;//张飞的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Zu;//卒的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Blank;//空白的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;Image&nbsp;image_Frame;//游戏框架的图片 <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;Images()&nbsp;{//构造函数 <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;boolean&nbsp;init()&nbsp;{//初始化游戏中用到的图片 <br /> &nbsp;&nbsp;&nbsp; try&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_base&nbsp;=&nbsp;Image.createImage(&quot;/huarongroad/BITBACK.png&quot;); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Frame&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;126,&nbsp;0,&nbsp;145,&nbsp;177, Sprite.TRANS_NONE); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Sprite类是用来翻转图片的，是MIDP2.0新新增加的支持游戏的特性 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Zhaoyun&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;0,&nbsp;0,&nbsp;UNIT,&nbsp;2&nbsp;*&nbsp;UNIT, Sprite.TRANS_NONE); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Caocao&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;UNIT,&nbsp;0,&nbsp;2&nbsp;*&nbsp;UNIT, 2&nbsp;*&nbsp;UNIT,&nbsp;Sprite.TRANS_NONE); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Huangzhong&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;3&nbsp;*&nbsp;UNIT,&nbsp;0,&nbsp;UNIT, 2&nbsp;*&nbsp;UNIT, Sprite.TRANS_NONE); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Machao&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;0,&nbsp;2&nbsp;*&nbsp;UNIT,&nbsp;UNIT, 2&nbsp;*&nbsp;UNIT, Sprite.TRANS_NONE); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Guanyu&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;UNIT,&nbsp;2&nbsp;*&nbsp;UNIT, 2&nbsp;*&nbsp;UNIT,&nbsp;UNIT, Sprite.TRANS_NONE); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Zhangfei&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;3&nbsp;*&nbsp;UNIT,&nbsp;2&nbsp;*&nbsp;UNIT, UNIT,&nbsp;2&nbsp;*&nbsp;UNIT, Sprite.TRANS_NONE); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Zu&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;0,&nbsp;4&nbsp;*&nbsp;UNIT,&nbsp;UNIT,&nbsp;UNIT, Sprite.TRANS_NONE); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_Blank&nbsp;=&nbsp;Image.createImage(image_base,&nbsp;1&nbsp;*&nbsp;UNIT,&nbsp;4&nbsp;*&nbsp;UNIT,UNIT, UNIT, Sprite.TRANS_NONE); <br /> <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;true; <br /> &nbsp;&nbsp;&nbsp; }catch&nbsp;(Exception&nbsp;ex)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;false; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> } </font> <font face="Arial"> <br /> <br /> 　　Draw类的源代码如下： <br /> <br /> </font> <font face="宋体" color="#99CCFF"> package&nbsp;huarongroad; <br /> <br /> import&nbsp;javax.microedition.lcdui.*; <br /> <br /> public&nbsp;class&nbsp;Draw&nbsp;{ <br /> &nbsp;&nbsp;&nbsp; //绘制游戏中的图片 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;Draw(Canvas&nbsp;canvas)&nbsp;{//构造函数 <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;boolean&nbsp;paint(Graphics&nbsp;g,&nbsp;byte&nbsp;img,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //在地图的x,y点绘制img指定的图片 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; paint(g,&nbsp;img,&nbsp;x,&nbsp;y,&nbsp;Images.UNIT);//把地图x,y点转化成画布的绝对坐标，绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;true; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch&nbsp;(Exception&nbsp;ex)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;false; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;static&nbsp;boolean&nbsp;paint(Graphics&nbsp;g,&nbsp;byte&nbsp;img,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;unit)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch&nbsp;(img)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.CAOCAO://画曹操 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //变成绝对坐标，并做调整 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Caocao,&nbsp;Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.GUANYU://画关羽 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Guanyu,&nbsp;Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.HUANGZHONG://画黄忠 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Huangzhong,&nbsp;Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.MACHAO://画马超 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Machao,&nbsp;Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.ZHANGFEI://画张飞 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Zhangfei,&nbsp;Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.ZHAOYUN://画赵云 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Zhaoyun,&nbsp;Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.ZU://画卒 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Zu,&nbsp;Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.BLANK://画空白 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Blank,&nbsp;Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Images.CURSOR://画光标 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawRect(Images.LEFT&nbsp;+&nbsp;x&nbsp;*&nbsp;unit, Images.TOP&nbsp;+&nbsp;y&nbsp;*&nbsp;unit,Images.UNIT,Images.UNIT); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;true; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch&nbsp;(Exception&nbsp;ex)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;false; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> }</font><font face="Arial"><br /> <br /> 　　其中Images类存的是绘图位置常量（也就是在画图时每个格子的长度和相对坐标原点位置要进行的调整）、地图位置常量（地图的长、宽），地图标记常量（人物对应的记号），地图组合标记常量（后面会细说），图片常量（存放人物的图片）；Draw类主要负责在制定的位置画出人物图片。下面我来说说Images类中的地图标记常量和地图组合标记常量。为了能够灵活的安排各个关面的布局，我们决定把游戏布局的信息存储在外部文件中，然后程序启动后把它读进来。这样我们制定了一套存储图片的代码，这就是地图标记常量，如上面Images类中定义的Caocao(曹操)用a字符来表示，当程序读到a字符时就能将它转化成曹操对应的图片，并在读到a字符的位置上进行显示。但是从实际观察中我们发现所有的图片并不是统一大小的，有的占4个格子，有的占2个格子，还有的占1个格子，而且即便同是占两个格子的图片还有横、竖之分。有鉴于此，我们引入了地图组合标记常量，就是说在遇到占有多个格子的时候，值1(也就是Images.LEFT)表示它的左边是一个真正的地图标记，值2(也就是Images.UP)表示它的上边是一个真正的地图标记，值1(也就是Images.LEFTUP)表示它的左上边是一个真正的地图标记。地图组合标记常量其实就是用来占位置的，与实际显示无关，当后面我们将到移动时还会再来分析组合标记的使用。 <br /> <br /> 　　Draw类主要是用来在画布上画出图形，它有两个paint方法，这是很常见的函数重载。但是程序中实际上只用到了4个参数的paint方法，它直接获得要画图片的相对坐标位置信息，然后调用5个参数的paint方法。5个参数的paint方法将相对坐标位置信息转换成绝对位置，并实际调用Graphics.drawImage()方法，将Images中的图片画了出来。这种实现方法的好处是灵活和便于扩展，但你需要画图的位置并不能够对应到格子中的相对坐标位置时，你就可以直接调用5个参数的paint方法，而不必再去修改这各类；但你添加新的图片时，只要在Images中增加对应的常量，然后向Draw中5个参数的paint方法添加一条处理就可以了。 <br /> 写到这里，两天的时间刚好用完。 <br /> <br /> <br /> <b><a name="三、需求分析">三、需求分析</a> </b><br /> <br /> 　　这部分叫做需求分析，听起来挺吓人的，其实就是搞清楚我们要做什么，做成什么样，那些不做。下面我引领着大家共同来完成这一步骤。首先，我们要做一个华容道的游戏，华容道的故事这里不再赘述了，但其中的人物在这里限定一下，如上面Images类里的定义，我们这个版本只提供曹操(Caocao)、关羽(Guanyu)、张飞(Zhangfei)、赵云(Zhaoyun)、黄忠(Huangzhong)、马超(Machao)和卒(Zu)。我们这里也限定一下游戏的操作方法：首先要通过方向键选择一个要移动的区域(就是一张图片)，被选择的区域用黑色方框框住；选好后按Fire键(就是确定键)将这块区域选中，被选中的区域用绿色方框框住；然后选择要移动到的区域，此时用红色方框框住被选择的区域；选好要移动到的区域之后按Fire键将要移动的区域(图片)移到要移动到的区域，并去掉绿色和红色的方框。这里需要强调的概念有选择的区域、选中的区域、要移动的区域和要移动到的区域，这四个概念请读者注意区分，当然也应当把这一部分记入数据字典之中。为了使文章的重点突出(介绍如何制作一个J2ME的收集游戏)，我们这里限定一些与本主题无关的内容暂不去实现：过关之后的动画(实现时要用到TimerTask或Thread类，后续的系列文章中我会详细介绍动画方面的知识)、关面之间的切换(其实很简单，当完成任务之后重新再做一边)、暂停和保存等操作(这部分的内容介绍的资料很多，我也写不出什么新的东东来，难免抄袭，故此免掉)。 <br /> <br /> 　　需求分析基本完成，离下午还有一段时间，马上动手用ACDSee把从网上找来的BMP文件，调整其大小为271*177(我的这个图片是两个部分合在一起，所以比手机实际屏幕大了)，另存为PNG格式。半天时间刚刚好，不但搞清楚了要做的东东，还把要用的图片准备好了。<br /> <br /> <br /> <b><a name="四、概要设计">四、概要设计</a></b> <br /> <br /> 　　概要设计是从需求分析过渡到详细设计的桥梁和纽带，这一部分中我们确定项目的实现方法和模块的划分。我们决定将整个项目分成五个部分，分别是前面介绍的Images、Draw，还有Map和Displayable1和MIDlet1。Images和Draw类功能简单、结构固定，因此很多项目我们都使用这两各类，这里直接拿来改改就能用了，前面已经介绍过这里不再赘述。Map类是用来从外部文件读入地图，然后保存在一个数组之中，这部分的内容是我们在本阶段讨论的重点。Displayable1是一个继承了Canvas类的画布，它用来处理程序的主要控制逻辑和一部分控制逻辑所需的辅助函数，主要函数应该包括用来绘图的paint()函数、用来控制操作的keyPressed()函数、用来控制选择区域的setRange()函数、用来控制选择要移动到区域的setMoveRange()函数、用来移动选中区域的Move()函数和判断是否完成任务的win()函数，更具体的分析，我们放到详细设计中去细化。MIDlet1实际上就是一个控制整个J2ME应用的控制程序，其实也没有什么可特别的，它和我们前面介绍的&quot;Hello&nbsp;World&quot;程序大同小异，这里就不展开来说了，后面会贴出它的全部代码。 <br /> <br /> 　　Map类主要应该有一个Grid[][]的二维数组，用来存放华容道的地图，还应该有一个read_map()函数用来从外部文件读取地图内容填充Grid数据结构，再就是要有一个draw_map()函数用来把Grid数据结构中的地图内容转换成图片显示出来(当然要调用Draw类的paint方法)。说到读取外部文件，笔者知道有两种方法：一种是传统的定义一个InputStream对象，然后用getClass().getResourceAsStream()方法取得输入流，然后再从输入流中取得外部文件的内容，例如 <br /> <br /> </font><font face="宋体" color="#99CCFF"> InputStream&nbsp;is&nbsp;=&nbsp;getClass().getResourceAsStream(&quot;/filename&quot;); <br /> if&nbsp;(is&nbsp;!=&nbsp;null)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp; byte&nbsp;a&nbsp;=&nbsp;(byte)&nbsp;is.read(); <br /> }&nbsp; </font><font face="Arial"><br /> <br /> 　　这里请注意文件名中的根路径是相对于便以后的class文件放置的位置，而不是源文件(java)。第二种方法是使用onnector.openInputStream方法，然后打开的协议是Resource，但是这种方法笔者反复尝试都没能调通，报告的错误是缺少Resource协议，估计第二种方法用到J2ME的某些扩展类包，此处不再深究。由于以前已经做过一些类似华容道这样的地图，这里直接给出Map类的代码，后面就不再详细解释Map类了，以便于我们可以集中精力处理Displayable1中的逻辑。Map类的代码如下： <br /> <br /> </font><font face="宋体" color="#99CCFF">package&nbsp;huarongroad; <br /> <br /> import&nbsp;java.io.InputStream; <br /> import&nbsp;javax.microedition.lcdui.*; <br /> <br /> public&nbsp;class&nbsp;Map&nbsp;{ <br /> &nbsp;&nbsp;&nbsp; //处理游戏的地图，负责从外部文件加载地图数据，存放地图数据，并按照地图数据绘制地图 <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;byte&nbsp;Grid[][];//存放地图数据 <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;Map()&nbsp;{//构造函数，负责初始化地图数据的存储结构 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Grid&nbsp;=&nbsp;new&nbsp;byte[Images.HEIGHT][Images.WIDTH]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //用二维数组存放地图数据，注意第一维是竖直坐标，第二维是水平坐标 <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;int[]&nbsp;read_map(int&nbsp;i)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://从&quot;＞file://从＜/A＞外部文件加载地图数据，并存放在存储结构中，返回值是光标点的位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //参数是加载地图文件的等级 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int[]&nbsp;a&nbsp;=&nbsp;new&nbsp;int[2];//光标点的位置，0是水平位置，1是竖直位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InputStream&nbsp;is&nbsp;=&nbsp;getClass().getResourceAsStream( &quot;/huarongroad/level&quot;.concat(String.valueOf(i))); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(is&nbsp;!=&nbsp;null)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;k&nbsp;=&nbsp;0;&nbsp;k&nbsp;＜&nbsp;Images.HEIGHT;&nbsp;k++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;＜&nbsp;Images.WIDTH;&nbsp;j++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Grid[k][j]&nbsp;=&nbsp;(byte)&nbsp;is.read(); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(&nbsp;this.Grid[k][j]&nbsp;==&nbsp;Images.CURSOR&nbsp;)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //判断出光标所在位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[0]&nbsp;=&nbsp;j;//光标水平位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[1]&nbsp;=&nbsp;k;//光标竖直位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Grid[k][j]&nbsp;=&nbsp;Images.BLANK;//将光标位置设成空白背景 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is.read();//读取回车（13）,忽略掉 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is.read();//读取换行（10）,忽略掉 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is.close(); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //读取文件失败 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[0]&nbsp;=&nbsp;-1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[1]&nbsp;=&nbsp;-1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch&nbsp;(Exception&nbsp;ex)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //打开文件失败 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[0]&nbsp;=&nbsp;-1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[1]&nbsp;=&nbsp;-1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;a; <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;boolean&nbsp;draw_map(Graphics&nbsp;g)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //调用Draw类的静态方法，绘制地图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;＜&nbsp;Images.HEIGHT;&nbsp;i++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;＜&nbsp;Images.WIDTH;&nbsp;j++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Draw.paint(g,&nbsp;this.Grid[i][j],&nbsp;j,&nbsp;i);//绘制地图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;true; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch&nbsp;(Exception&nbsp;ex)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;false; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> } </font><font face="Arial"><br /> &nbsp; <br /> <br /> 　　对于像华容道这样的小型地图可以直接用手工来绘制地图的内容，比如： <br /> <br /> </font><font face="宋体" color="#99CCFF">fa1c <br /> 2232 <br /> bd1e <br /> 2gg2 <br /> gihg </font><font face="Arial"><br /> <br /> 　　但是，如果遇到像坦克大战或超级玛莉那样的地图，就必须另外开发一个地图编辑器了(我会在后续的文章中介绍用vb来开发一个地图编辑器)。 <br /> <br /> <br /> <b><a name="五、详细设计">五、详细设计</a></b> <br /> <br /> 　　详细设计是程序开发过程中至关重要的一个环节，好在我们在前面的各个阶段中已经搭建好了项目所需的一些工具，现在这个阶段中我们只需集中精力设计好Displayable1中的逻辑。(两天的时间当然不只干这点活，还要把其他几个类的设计修改一下) <br /> <br /> 　　Displayable1这个类负责处理程序的控制逻辑。首先，它需要有表示当前关面的变量level、表示当前光标位置的变量loc、表示要移动区域的变量SelectArea、表示要移动到的区域的变量MoveArea、表示是否已有区域被选中而准备移动的变量Selected和Map类的实例MyMap。然后，我们根据用户按不同的键来处理不同的消息，我们要实现keyPressed()函数，在函数中我们处理按键的上下左右和选中(Fire)，这里的处理需要我展开来讲一讲，后面我很快会把这一部分详细展开。 <br /> <br /> 　　接下来，是实现paint()函数，我们打算在这一部分中反复的重画背景、地图和选择区域，这个函数必须处理好区域被选中之后的画笔颜色的切换，具体讲就是在没有选中任何区域时要用黑色画笔，当选重要移动的区域时使用绿色画笔，当选择要移动到的区域时改用红色画笔(当然附加一张流程图是必不可少的)。 <br /> <br /> 　　再下面要实现的setRange()函数和setMoveRange()函数，这两个函数用来设置要移动的区域和要移动到的区域，我的思路就是利用前面在Images类中介绍过的地图组合标记常量，当移动到地图组合标记常量时，根据该点地图中的值做逆向变换找到相应的地图标记常量，然后设置相应的loc、SelectArea和MoveArea,其中setMoveRange()函数还用到了一个辅助函数isInRange(),isInRange()函数是用来判断给定的点是否在已选中的要移动的区域之内,如果isInRange()的返回值是假并且该点处的值不是空白就表明要移动到的区域侵犯了其他以被占用的区域。有了setRange()和setMoveRange()函数，Move()函数就水到渠成了,Move()函数将要移动的区域移动到要移动到的区域,在移动过程中分为三步进行: <br /> <br /> 　　第一.复制要移动的区域； <br /> <br /> 　　第二.将复制出的要移动区域复制到要移动到的区域(这两步分开进行的目的是防止在复制过程中覆盖掉要移动的区域)； <br /> <br /> 　　第三.用isInRange2()判断给定的点是否在要移动到的区域内,将不在要移动到的区域内的点设置成空白。 <br /> <br /> 　　下面我们详细的分析一下keyPressed()函数的实现方法:首先,keyPressed()函数要处理按键的上下左右和选中(Fire),在处理时需要用Canvas类的getGameAction函数来将按键的键值转换成游戏的方向,这样可以提高游戏的兼容性(因为不同的J2ME实现,其方向键的键值不一定是相同的)。 <br /> <br /> 　　接下来,分别处理四个方向和选中.当按下向上时,先判断是否已经选定了要移动的区域(即this.selected是否为真),如果没有选中要移动区域则让光标向上移动一格,然后调用setRange()函数设置选择要移动的区域,再调用repaint()函数刷新屏幕,否则如果已经选中了要移动的区域,就让光标向上移动一格,然后调用setMoveRange()函数判断是否能够向上移动已选中的区域,如果能移动就调用repaint()函数刷新屏幕,如果不能移动就让光标向下退回到原来的位置。 <br /> <br /> 　　当按下向下时,先判断是否已经选定了要移动的区域,如果没有选中要移动的区域则判断当前所处的区域是否为两个格高,如果是两个格高则向下移动两格,如果是一个格高则向下移动一格,接着再调用setRange()函数设置选择要移动的区域,而后调用repaint()函数刷新屏幕,否则如果已经选中了要移动的区域,就让光标向下移动一格,然后调用setMoveRange()函数判断是否能够向下移动已选中的区域,如果能移动就调用repaint()函数刷新屏幕,如果不能移动就让光标向上退回到原来的位置.按下向左时情况完全类似向上的情况,按下向右时情况完全类似向下的情况,因此这里不再赘述,详细情况请参见程序的源代码。 <br /> <br /> 　　当按下选中键时,先判断是否已经选中了要移动的区域,如果已经选中了要移动的区域就调用Move()函数完成由要移动的区域到要移动到的区域的移动过程,接着调用repaint()函数刷新屏幕,然后将已选择标记置成false,继续调用win()函数判断是否完成了任务,否则如果还没有选定要移动的区域则再判断当前选中区域是否为空白,如果不是空白就将选中标记置成true,然后刷新屏幕.这里介绍一个技巧,在开发程序遇到复杂的逻辑的时候,可以构造一格打印函数来将所关心的数据结构打印出来以利调试,这里我们就构造一个PrintGrid()函数,这个函数纯粹是为了调试之用,效果这得不错.至此我们完成了编码前的全部工作。<br /> <br /> <br /> <b><a name="六、编码">六、编码</a></b><br /> <br /> 　　整个项目共有五个类,有四个类的代码前面已经介绍过了,而且是在其他项目中使用过的相对成熟的代码.现在只需全力去实现Displayable1类.Displayable1类的代码如下: <br /> <br /> </font><font face="宋体" color="#99CCFF">package&nbsp;huarongroad; <br /> <br /> import&nbsp;javax.microedition.lcdui.*; <br /> <br /> public&nbsp;class&nbsp;Displayable1&nbsp;extends&nbsp;Canvas&nbsp;implements&nbsp;CommandListener&nbsp;{ <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;int[]&nbsp;loc&nbsp;=&nbsp;new&nbsp;int[2];&nbsp;＜A&nbsp;href=&quot;file://光&quot;＞file://光＜/A＞标的当前位置，0是水平位置，1是竖直位置 <br /> &nbsp;&nbsp;&nbsp; private&nbsp;int[]&nbsp;SelectArea&nbsp;=&nbsp;new&nbsp;int[4];//被选定的区域，即要移动的区域 <br /> &nbsp;&nbsp;&nbsp; private&nbsp;int[]&nbsp;MoveArea&nbsp;=&nbsp;new&nbsp;int[4];//要移动到的区域 <br /> &nbsp;&nbsp;&nbsp; private&nbsp;Map&nbsp;MyMap&nbsp;=&nbsp;new&nbsp;Map();//地图类 <br /> &nbsp;&nbsp;&nbsp; private&nbsp;boolean&nbsp;selected;//是否已经选中要移动区域的标志 <br /> &nbsp;&nbsp;&nbsp; private&nbsp;int&nbsp;level;//但前的关面 <br /> &nbsp;&nbsp;&nbsp; public&nbsp;Displayable1()&nbsp;{//构造函数 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jbInit();//JBuilder定义的初始化函数 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch&nbsp;(Exception&nbsp;e)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace(); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;void&nbsp;Init_game(){ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //初始化游戏，读取地图，设置选择区域，清空要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc&nbsp;=&nbsp;MyMap.read_map(this.level);//读取地图文件，并返回光标的初始位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //0为水平位置，1为竖直位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[0]&nbsp;=&nbsp;this.loc[0];//初始化选中的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[1]&nbsp;=&nbsp;this.loc[1]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[2]&nbsp;=&nbsp;1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[3]&nbsp;=&nbsp;1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[0]&nbsp;=&nbsp;-1;//初始化要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[1]&nbsp;=&nbsp;-1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[2]&nbsp;=&nbsp;0; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[3]&nbsp;=&nbsp;0; <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;void&nbsp;jbInit()&nbsp;throws&nbsp;Exception&nbsp;{//JBuilder定义的初始化函数 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://初&quot;＞file://初＜/A＞始化实例变量 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.selected&nbsp;=&nbsp;false;//设置没有被选中的要移动区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.level&nbsp;=&nbsp;1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Images.init();//初始化图片常量 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Init_game();//初始化游戏，读取地图，设置选择区域，清空要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setCommandListener(this);//添加命令监听，这是Displayable的实例方法 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; addCommand(new&nbsp;Command(&quot;Exit&quot;,&nbsp;Command.EXIT,&nbsp;1));//添加“退出”按钮 <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; public&nbsp;void&nbsp;commandAction(Command&nbsp;command,&nbsp;Displayable&nbsp;displayable)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //命令处理函数 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(command.getCommandType()&nbsp;==&nbsp;Command.EXIT)&nbsp;{//处理“退出” <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MIDlet1.quitApp(); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; protected&nbsp;void&nbsp;paint(Graphics&nbsp;g)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //画图函数，用于绘制用户画面，即显示图片，勾画选中区域和要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawImage(Images.image_Frame,&nbsp;0,&nbsp;0, Graphics.TOP&nbsp;|&nbsp;Graphics.LEFT);//画背景 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyMap.draw_map(g);//按照地图内容画图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(&nbsp;this.selected&nbsp;) <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.setColor(0,255,0);//如果被选中，改用绿色画出被选中的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawRect(this.SelectArea[0]&nbsp;*&nbsp;Images.UNIT&nbsp;+&nbsp;Images.LEFT, this.SelectArea[1]&nbsp;*&nbsp;Images.UNIT&nbsp;+&nbsp;Images.TOP, this.SelectArea[2]&nbsp;*&nbsp;Images.UNIT, this.SelectArea[3]&nbsp;*&nbsp;Images.UNIT);//画出选择区域， <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://如&quot;＞file://如＜/A＞果被选中，就用绿色 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://否&quot;＞file://否＜/A＞则，使用黑色 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.setColor(255,255,255);//恢复画笔颜色 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.selected)&nbsp;{//已经选中了要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.setColor(255,&nbsp;0,&nbsp;255);//改用红色 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.drawRect(this.MoveArea[0]&nbsp;*&nbsp;Images.UNIT&nbsp;+&nbsp;Images.LEFT, this.MoveArea[1]&nbsp;*&nbsp;Images.UNIT&nbsp;+&nbsp;Images.TOP, this.MoveArea[2]&nbsp;*&nbsp;Images.UNIT, this.MoveArea[3]&nbsp;*&nbsp;Images.UNIT);//画出要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.setColor(255,&nbsp;255,&nbsp;255);//恢复画笔颜色 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch&nbsp;(Exception&nbsp;ex)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(Runtime.getRuntime().freeMemory()); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(Runtime.getRuntime().totalMemory()); <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;void&nbsp;setRange()&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //设置移动后能够选中的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //调整当前光标位置到地图的主位置，即记录人物信息的位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.MyMap.Grid[this.loc[1]][this.loc[0]]&nbsp;==&nbsp;Images.DLEFT)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]&nbsp;-=&nbsp;1;//向左调 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;if&nbsp;(this.MyMap.Grid[this.loc[1]][this.loc[0]]&nbsp;==&nbsp;Images.DUP)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]&nbsp;-=&nbsp;1;//向上调 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;if&nbsp;(this.MyMap.Grid[this.loc[1]][this.loc[0]]&nbsp;==&nbsp;Images.DLEFTUP)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]&nbsp;-=&nbsp;1;//向左调 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]&nbsp;-=&nbsp;1;//向上调 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[0]&nbsp;=&nbsp;this.loc[0];//设置光标的水平位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[1]&nbsp;=&nbsp;this.loc[1];//设置光标的竖直位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //设置光标的宽度 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[0]&nbsp;+&nbsp;1&nbsp;＜&nbsp;Images.WIDTH)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[2]&nbsp;=&nbsp;this.MyMap.Grid[this.loc[1]][this.loc[0]&nbsp;+&nbsp;1]&nbsp;!=&nbsp;(byte)&nbsp;'1'&nbsp;? 1&nbsp;:&nbsp;2; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[2]&nbsp;=&nbsp;1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //设置光标的高度 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[1]&nbsp;+&nbsp;1&nbsp;＜&nbsp;Images.HEIGHT)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[3]&nbsp;=&nbsp;this.MyMap.Grid[this.loc[1]&nbsp;+&nbsp;1][this.loc[0]]&nbsp;!=&nbsp;(byte)&nbsp;'2'&nbsp;? 1&nbsp;:&nbsp;2; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[3]&nbsp;=&nbsp;1; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;boolean&nbsp;setMoveRange()&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //设置要移动到的区域，能够移动返回true,否则返回false <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;＜&nbsp;this.SelectArea[2];&nbsp;i++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;＜&nbsp;this.SelectArea[3];&nbsp;j++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[1]&nbsp;+&nbsp;j&nbsp;＞=&nbsp;Images.HEIGHT&nbsp;|| this.loc[0]&nbsp;+&nbsp;i&nbsp;＞=&nbsp;Images.WIDTH&nbsp;|| (!isInRange(this.loc[0]&nbsp;+&nbsp;i,&nbsp;this.loc[1]&nbsp;+&nbsp;j)&nbsp;&amp;&amp; this.MyMap.Grid[this.loc[1]&nbsp;+&nbsp;j][this.loc[0]&nbsp;+&nbsp;i]&nbsp;!= <br /> Images.BLANK))&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;false; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[0]&nbsp;=&nbsp;this.loc[0]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[1]&nbsp;=&nbsp;this.loc[1]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[2]&nbsp;=&nbsp;this.SelectArea[2]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[3]&nbsp;=&nbsp;this.SelectArea[3]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;true; <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;boolean&nbsp;isInRange(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //判断给定的（x，y）点是否在选定区域之内，x是水平坐标，y是竖直坐标 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(x&nbsp;＞=&nbsp;this.SelectArea[0]&nbsp;&amp;&amp; x&nbsp;＜&nbsp;this.SelectArea[0]&nbsp;+&nbsp;this.SelectArea[2]&nbsp;&amp;&amp; y&nbsp;＞=&nbsp;this.SelectArea[1]&nbsp;&amp;&amp; y&nbsp;＜&nbsp;this.SelectArea[1]&nbsp;+&nbsp;this.SelectArea[3])&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;true; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;false; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;boolean&nbsp;isInRange2(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //判断给定的（x，y）点是否在要移动到的区域之内，x是水平坐标，y是竖直坐标 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(x&nbsp;＞=&nbsp;this.MoveArea[0]&nbsp;&amp;&amp; x&nbsp;＜&nbsp;this.MoveArea[0]&nbsp;+&nbsp;this.MoveArea[2]&nbsp;&amp;&amp; y&nbsp;＞=&nbsp;this.MoveArea[1]&nbsp;&amp;&amp; y&nbsp;＜&nbsp;this.MoveArea[1]&nbsp;+&nbsp;this.MoveArea[3])&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;true; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;false; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; protected&nbsp;void&nbsp;keyPressed(int&nbsp;keyCode)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //处理按下键盘的事件，这是Canvas的实例方法 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch&nbsp;(getGameAction(keyCode))&nbsp;{//将按键的值转化成方向常量 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Canvas.UP://向上 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(!this.selected)&nbsp;{//还没有选定要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[1]&nbsp;-&nbsp;1&nbsp;＞=&nbsp;0)&nbsp;{//向上还有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]--;//向上移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRange();//设置光标移动的区域，该函数能将光标移动到地图主位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//已经选定了要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[1]&nbsp;-&nbsp;1&nbsp;＞=&nbsp;0)&nbsp;{//向上还有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]--;//向上移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(setMoveRange())&nbsp;{//能够移动，该函数能够设置要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//不能移动 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]++;//退回来 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Canvas.DOWN://向下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(!this.selected)&nbsp;{//还没有选定要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[1]&nbsp;+&nbsp;1&nbsp;＜&nbsp;Images.HEIGHT)&nbsp;{//向下还有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.MyMap.Grid[this.loc[1]&nbsp;+&nbsp;1][this.loc[0]]&nbsp;== Images.DUP){//该图片有两个格高 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]++;//向下移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[1]&nbsp;+&nbsp;1&nbsp;＜&nbsp;Images.HEIGHT)&nbsp;{//向下还有 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://移&quot;＞file://移＜/A＞动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]++;//向下移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRange();//设置光标移动的区域， <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://该&quot;＞file://该＜/A＞函数能将光标移动到地图主位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//向下没有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]--;//退回来 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//该图片只有一个格高 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]++;//向下移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRange();//设置光标移动的区域， <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://该&quot;＞file://该＜/A＞函数能将光标移动到地图主位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//已经选定了要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[1]&nbsp;+&nbsp;1&nbsp;＜&nbsp;Images.HEIGHT)&nbsp;{//向下还有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]++;//向下移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(setMoveRange())&nbsp;{//能够移动，该函数能够设置要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//不能移动 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[1]--;//退回来 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Canvas.LEFT://向左 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(!this.selected)&nbsp;{//还没有选定要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[0]&nbsp;-&nbsp;1&nbsp;＞=&nbsp;0)&nbsp;{//向左还有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]--;//向左移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRange();//设置光标移动的区域，该函数能将光标移动到地图主位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//已经选定了要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[0]&nbsp;-&nbsp;1&nbsp;＞=&nbsp;0)&nbsp;{//向左还有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]--;//向左移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(setMoveRange())&nbsp;{//能够移动，该函数能够设置要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//不能移动 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]++;//退回来 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Canvas.RIGHT://向右 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(!this.selected)&nbsp;{//还没有选定要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[0]&nbsp;+&nbsp;1&nbsp;＜&nbsp;Images.WIDTH)&nbsp;{//向右还有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.MyMap.Grid[this.loc[1]][this.loc[0]&nbsp;+&nbsp;1]&nbsp;== Images.DLEFT)&nbsp;{//该图片有两个格宽 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]++;//向右移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[0]&nbsp;+&nbsp;1&nbsp;＜&nbsp;Images.WIDTH)&nbsp;{//向右还有 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://移&quot;＞file://移＜/A＞动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]++;//向右移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRange();//设置光标移动的区域， <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://该&quot;＞file://该＜/A＞函数能将光标移动到地图主位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//向右没有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]--;//退回来 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//该图片只有一个格宽 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]++;//向右移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setRange();//设置光标移动的区域， <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://该&quot;＞file://该＜/A＞函数能将光标移动到地图主位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//已经选定了要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.loc[0]&nbsp;+&nbsp;1&nbsp;＜&nbsp;Images.WIDTH)&nbsp;{//向右还有移动空间 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]++;//向右移动一下 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(setMoveRange())&nbsp;{//能够移动，该函数能够设置要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//不能移动 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.loc[0]--;//退回来 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br /> <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case&nbsp;Canvas.FIRE: <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.selected)&nbsp;{//已经选定了要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Move();//将要移动的区域移动到刚选中的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.selected&nbsp;=&nbsp;false;//清除已选定要移动区域的标志 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(&nbsp;win())&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;win&quot;); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//还没有选定要移动的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.MyMap.Grid[this.loc[1]][this.loc[0]]&nbsp;== Images.BLANK)&nbsp;{//要移到的位置是一个空白 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//要移到的位置不是空白 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.selected&nbsp;=&nbsp;true;//设置已选定要移动区域的标志 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repaint();//重新绘图 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;boolean&nbsp;win(){ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://判&quot;＞file://判＜/A＞断是否已经救出了曹操 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(&nbsp;this.MyMap.Grid[Images.HEIGHT&nbsp;-&nbsp;2&nbsp;][Images.WIDTH&nbsp;-&nbsp;3&nbsp;]&nbsp;==&nbsp;Images.CAOCAO&nbsp;) <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;true; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;false; <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;void&nbsp;PrintGrid(String&nbsp;a)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://打&quot;＞file://打＜/A＞印当前地图的内容，用于调试 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(a); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;＜&nbsp;Images.HEIGHT;&nbsp;i++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;＜&nbsp;Images.WIDTH;&nbsp;j++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(&nbsp;(char)this.MyMap.Grid[i][j]); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;&quot;); <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> <br /> &nbsp;&nbsp;&nbsp; private&nbsp;void&nbsp;Move()&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://将&quot;＞file://将＜/A＞要移动的区域移动到刚选中的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(this.MoveArea[0]&nbsp;==&nbsp;-1&nbsp;||&nbsp;this.MoveArea[1]&nbsp;==&nbsp;-1&nbsp;|| this.SelectArea[0]&nbsp;==&nbsp;-1&nbsp;||&nbsp;this.SelectArea[1]&nbsp;==&nbsp;-1)&nbsp;{//没有选中区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{//已经选中了要移动的区域和要移动到的区域 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; byte[][]&nbsp;temp&nbsp;=&nbsp;new&nbsp;byte[this.SelectArea[3]][this.SelectArea[2]]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://复&quot;＞file://复＜/A＞制要移动的区域，因为这块区域可能会被覆盖掉 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;＜&nbsp;this.SelectArea[2];&nbsp;i++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;＜&nbsp;this.SelectArea[3];&nbsp;j++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; temp[j][i]&nbsp;= this.MyMap.Grid[this.SelectArea[1]&nbsp;+j] [this.SelectArea[0]&nbsp;+&nbsp;i]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://PrintGrid&quot;＞file://PrintGrid＜/A＞(&quot;1&quot;);&nbsp;//&nbsp;调试信息 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://将&quot;＞file://将＜/A＞要移动的区域移动到刚选中的区域（即要移动到的区域） <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;＜&nbsp;this.SelectArea[2];&nbsp;i++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;＜&nbsp;this.SelectArea[3];&nbsp;j++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MyMap.Grid[this.MoveArea[1]&nbsp;+&nbsp;j] [this.MoveArea[0]&nbsp;+&nbsp;i]&nbsp;=&nbsp;temp[j][i]; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://PrintGrid&quot;＞file://PrintGrid＜/A＞(&quot;2&quot;);//&nbsp;调试信息 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://将&quot;＞file://将＜/A＞要移动的区域中无用内容置成空白 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;＜&nbsp;this.SelectArea[3];&nbsp;i++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;＜&nbsp;this.SelectArea[2];&nbsp;j++)&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if&nbsp;(!isInRange2(this.SelectArea[0]&nbsp;+&nbsp;j, this.SelectArea[1]&nbsp;+&nbsp;i))&nbsp;{//该点是不在要移动到 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://的&quot;＞file://的＜/A＞区域之内，需置空 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MyMap.Grid[this.SelectArea[1]&nbsp;+&nbsp;i] [this.SelectArea[0]&nbsp;+&nbsp;j]&nbsp;=&nbsp;Images.BLANK; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else&nbsp;{ <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ＜A&nbsp;href=&quot;file://PrintGrid&quot;＞file://PrintGrid＜/A＞(&quot;3&quot;);//&nbsp;调试信息 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[0]&nbsp;=&nbsp;this.MoveArea[0];//重置选中位置的水平坐标 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.SelectArea[1]&nbsp;=&nbsp;this.MoveArea[1];//重置选中位置的竖直坐标 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[0]&nbsp;=&nbsp;-1;//清空要移动到的位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[1]&nbsp;=&nbsp;-1;//清空要移动到的位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[2]&nbsp;=&nbsp;0;//清空要移动到的位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MoveArea[3]&nbsp;=&nbsp;0;//清空要移动到的位置 <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br /> &nbsp;&nbsp;&nbsp; } <br /> }</font><font face="Arial"><br /> <br /> 　　代码的相关分析,在详细设计阶段已经讲过,代码中有比较相近的注释,请读者自行研读分析.将全部的代码写好,用wtk2.0自带的Ktoolbar工具建立一个工程,接下来把去不源文件放到正确位置下,然后点击build,再点run,就完成了程序的编写.当然如果有错误还要修改和调试. <br /> <br /> <br /> <b><a name="七、测试">七、测试</a></b><br /> <br /> 　　作为一个真正的产品要经过单体测试、结合测试和系统测试。由于项目本身简单,而且大部分代码已经是相对成熟的,我们跳过单体测试；又由于笔者的实际环境所限,无法搞到Java手机,无法架设OTA服务器,因此我们也只能放弃系统测试。那么就让我们开始结合测试吧。测试之前要先出一个测试式样书,也就是测试的计划。我们将它简化一下,只测试如下几种情况:第一、对各种形状的区域的选择和移动;第二、临近边界区域的选择和移动;第三、同一区域的反复选择和反复移动;第四、非法选择和非法移动。有了测试的目标,接下来的工作就是用wtk2.0自带的Run&nbsp;MIDP&nbsp;Application工具进行测试。打开这个工具,加载huarongRoad的jad文件,程序就会自动运行,选择launch上MIDlet1这个程序,华容道游戏就会跃然屏幕之上,接下来的工作就是左三点.右三点,拇指扭扭,来做测试。测试过程中发现任何的问题,立刻发一个bug票给自己,然后就又是痛苦的调试和修正bug,如此如此。 <br /> <br /> <br /> <b><a name="八、发布">八、发布</a></b><br /> <br /> 　　谈到发布,其实是个关键,再好的产品不能很好的发布出去也只是个产品而已,变不成商品也就得不到回报.由于笔者的条件所限,这里只能是纸上谈兵,不过还是希望能够使读者对这一过程有所了解(网上的资料也很多)。 <br /> <br /> 　　J2ME的程序发布一般都是通过OTA(Over&nbsp;The&nbsp;Air),你只需要一台有公网IP的主机和一个普通的web&nbsp;Server就可以了(尽管要求很低,但笔者还是没有)，这里我们以apache为例介绍一下OTA服务的配置，首先是安装好了apache服务器，然后在conf目录下找到mime.types文件，在该文件中加入如下两行 <br /> <br /> </font>  <font face="宋体" color="#99CCFF">application/java-archive&nbsp;jar&nbsp; <br /> text/vnd.sun.j2me.app-descriptor&nbsp;jad&nbsp; </font> <font face="Arial"> <br /> <br /> 　　然后重起apache服务器就可以了。接下来的工作就是修改jad文件中MIDlet-Jar-URL:后面的参数，将它改为URL的绝对路径，即＜A&nbsp;href=&quot;http://***/&quot;＞http://***/＜/A＞huarongroad.jar(其中***是你的域名或IP地址)。在下面就是用java手机下载jad文件，它会自动部署相应的jar文件并加载它。剩下的工作就和在模拟器上操作是一样的了。 <br /> <br /> <br /> <b><a name="九、项目总结">九、项目总结</a></b><br /> <br /> 　　至此，我们已经完成了一个J2ME游戏的全部开发过程，程序中涉及到了调研、分析、设计、编码、测试和发布等方面的问题，其实在实际的工作中还有很多更为具体的问题，毕竟技术只在软件开发过程中占据很有限的一部分，这里限于篇幅的限制无法一一具体展开。今后，笔者计划再写一篇使用J2ME开发手机屏保的文章，借此机会向读者展示J2ME动画技术；然后再写一篇J2ME网络应用的文章，做一个类似开心辞典那样的知识问答游戏，以便向读者展示J2ME的网络技术；待这两方面的技术交待清楚之后，我将引领读者制作一个稍大一些的游戏。</font></td> 
           </tr> 
           <tr> 
            <td width="100%"> 　</td> 
           </tr> 
           <tr> 
            <td width="100%" bgcolor="#151631"> <p align="right"><font size="1">&nbsp;&nbsp;</font></p></td> 
           </tr> 
           <tr> 
            <td width="100%"> <p align="right"> </p>
             <form> 
              <p align="right"><font size="1">&nbsp;</font><br /> <input type="BUTTON" value="关 闭 窗 口" onclick="window.close()" /></p> 
             </form> </td> 
           </tr> 
          </tbody>
         </table> 
        </center> 
       </div> </td> 
     </tr> 
     <tr> 
      <td width="100%"> <p align="center"><br /> <embed width="468" height="60" src="../../../images/GameRes.swf" /><br /> <br /><font size="2"> 本站中所有文章以及图形均为作者本人、公司所有，本站所有资讯仅供参考，若有任何损失本站概不负责，请自行斟酌。<br /> Copyright &copy; 2001-200? 中国游戏开发资源网（GameRes.com） All Rights reserved.<br /> This site is optimized for at least 1024x768 resolution (hi-color) viewing with a browser that supports style sheets.<br /> </font> </p></td> 
     </tr> 
    </tbody>
   </table> <script type="text/javascript">var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3Fda15d801c31af4462f4da256d5cf95e8' type='text/javascript'%3E%3C/script%3E"));</script> </font> 
 </body>
</html>