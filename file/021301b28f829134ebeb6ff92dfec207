<!DOCTYPE html>
<html>
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=gbk" /> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /> 
  <meta name="applicable-device" content="mobile" /> 
  <meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" /> 
  <meta name="apple-touch-fullscreen" content="yes" /> 
  <meta name="apple-mobile-web-app-capable" content="yes" /> 
  <meta name="format-detection" content="telephone=no" /> 
  <title>【运维经验 10000字】- 天天范文</title> 
  <meta name="keywords" content="运维经验" /> 
  <meta name="description" content="【运维经验】-三运维工程师的职责1保证服务达到要求的线标准如999保证线上稳定如网络系统运维工程师对网络系统稳定负责那应用运维就需对线上应用的稳定负责2不断的提升应用的可靠性与健壮性性能优化安全提升这方面非常考验主动性和创新..." /> 
  <link rel="canonical" href="http://m.ttfanwen.com/info_25/fw_3793807.html" /> 
  <link href="http://img.ttfanwen.com/css/m/style.css" rel="stylesheet" /> 
  <script src="http://img.ttfanwen.com/js/common/function.js" language="javascript"></script> 
 </head> 
 <body> 
  <div class="w-mp"> 
   <div class="w-ip"> 
    <div class="w-tb"> 
     <a href="http://m.ttfanwen.com/yunweijingyanzongjie/" class="w-bp" rel="nofollow"></a> 
     <div class="w-logo">
      <a href="http://m.ttfanwen.com/" title="天天范文网" rel="nofollow"></a>
     </div> 
    </div> 
    <script language="javascript">dy('bd_m_cnt_top_1');</script> 
    <div class="w-main"> 
     <div class="w-zhuting"> 
      <h2 class="w-biaoting">运维经验（10000字）</h2> 
      <p class="w-from"> <font>来源:m.ttfanwen.com</font><font>时间:2016.4.18</font> </p> 
      <div class="w-wenzhang"> 
       <div class="top-tj"> 
        <ul> 
         <li><a href="http://m.ttfanwen.com/info_7/fw_1401423.html">篇一: linux服务器故障之运维经验总结</a></li> 
         <li><a href="http://m.ttfanwen.com/info_1/fw_862432.html">篇二: 一个萝卜一个坑：短网址开发运维经验总结分享</a></li> 
         <li><a href="http://m.ttfanwen.com/info/fw_723357.html">篇三: 手机维修经验总结</a></li> 
         <li><a href="http://m.ttfanwen.com/info/fw_648486.html">篇四: 电脑维修经验总结二</a></li> 
         <li class="clear-style"><a href="http://m.ttfanwen.com/info_1/fw_828418.html">篇五: 6SE70使用维护经验总结</a></li> 
         <li><a href="http://m.ttfanwen.com/yunweijingyanzongjie/">篇六: 运维经验总结</a></li> 
         <li><a href="http://m.ttfanwen.com/weixiujingyanzongjie/">篇七: 维修经验总结</a></li> 
        </ul> 
       </div>
       <p></p> 
       <script language="javascript">dy('bd_m_cnt_top_3');</script> 
       <p class="t">三、<a href="http://m.ttfanwen.com/info_10/fw_2351612.html" title="海量运维精要总结" target="_blank">运维</a>工程师的职责</p> 
       <p class="t">1、保证服务达到要求的线标准，如99.9%；保证线上稳定，如，网络/系统运维工程师对网络、系统稳定负责，那应用运维就需对线上应用的稳定负责。</p> 
       <p class="t">2、不断的提升应用的可靠性与健壮性、性能优化、安全提升；这方面非常考验主动性、和创新思维</p> 
       <p class="t">3、网站各层面实时状态的监控、统计的覆盖度；软件、硬件、运行状态，能监控的都需要监控统计，避免监控死角、并能实时了解应用的运转情况。</p> 
       <p class="t">4、通过创新思维解决运维效率问题；目前各公司大部份运维主要工作还是依赖人工操作干预，需要尽可能的解放双手</p> 
       <p class="t">5、运维知识的积累与沉淀、文档的完备性，运维是一个<a href="http://m.ttfanwen.com/yunweijingyanzongjie/" title="运维经验总结">经验</a>性非常强的岗位，好的<a href="http://m.ttfanwen.com/jingyanzongjie/" title="经验总结">经验</a>与陷阱都需积累下来，避免重复性范错。</p> 
       <p class="t">6、成本控制；通过技术手段提升硬件承载、架构优化，如虚拟化技术，节省硬件开支。</p> 
       <p class="t">7、自动化运维；能对日常机械化工作进行提炼、设计并开发成工具、系统，能让系统自动完成的尽量依靠系统；让大家更多的时间用于思考、创新思维、做自已喜欢的事情。</p> 
       <p class="t">二、运维工作师需要什么样的技能及素质</p> 
       <p class="t">做为一名运维工程师需要什么样的技能及素质呢，首先说说技能吧，如大家上面所看到，运维是一个集多IT工种技能与一身的岗位，对系统-&gt;网络-&gt;存储-&gt;协议-&gt;需求-&gt;开发-&gt;测试-&gt;安全等各环节都需要了解一些，但对于某些环节需熟悉甚至精通，如系统(基本操作系统的熟悉使用,*nix,windows..)、协议、开发(日常很重要的工作是自动运维化相关开发、大规模集群工具开发、管理）、通用应用（如lvs、ha、web server、db、中间件、存储等。。。）、网络（至少要对应用所处网络环境非常了解）；</p> 
       <p class="t">技能方面总结以下几点：</p> 
       <p class="t">1、开发能力，这点非常重要，因为运维工具都需要自已开发，开发语言：c/c++（必备其中之一）、perl、python、php（其中之一）、shell（awk,sed,expect....等），需要有过实际开发经验，否则工作会非常痛苦</p> 
       <p class="t">2、通用应用方面需要了解：操作系统（目前国内主要是linux、bsd）、webserver相关</p> 
       <p class="t">(highttp,apahe,php,tomcat,java。。。)、数据库(mysql,oralce)、其它杂七八拉的东东，如系统优化，高可靠性等等。这些只是加分项，不需必备，可以边工作边慢慢学，这些东西都不难。当然在运维中，有些是有分工偏重点不一样。如可能有专门的运维DBA</p> 
       <p class="t">3、系统、网络、安全等需要有所了解，至少知道其原理</p> 
       <p class="t">（51CTO编辑注：本站鲜橙加冰的《运维人员应该掌握哪些常用技术》一文也写得相当不错，值得阅读）</p> 
       <p class="t">个人素质方面：</p> 
       <p class="t">1 沟通能力、团队协作：运维工作跨部门、跨工种工作很多，需善于沟通、并且团队协作能力要强；这应该是现代企业的基本素质要求了，不多说了。。。</p> 
       <p class="t">2 工作中需胆大心细：胆大才能创新、不走寻常路，特别对于运维这种新的工种，更需创新才能促进发展；心细，运维工程师是网站admin,最高线上权限者，一不小心就会遗憾终生或打入十八层地狱??</p> 
       <p class="t">3 主动性、执行力、精力旺盛、抗压能力强：由于IT行业的特性，变化快；往往计划赶不上变化，运维工作就更突出了，比如国内各大公司服务器往往是全国各地，哪里便宜性价比高，就那往搬，进行大规模服务迁移（牵扯的服务器成百上千台），这是一个非常头痛的问题；往往时间非常紧迫，如限1周内完成，要命~~~，这种情况下，运维工程师的主动性及执行力就有很高的要求了：计划、方案、服务无缝迁移、机器搬迁上架、环境准备、安全评估、性能评估、基建、各关联部门扯皮??7X24小紧急事故响应等。 4 其它就是一些基本素质了：头脑要灵光、逻辑思维能力强、为人谦虚稳重、亲和力、乐于助人、有大局观</p> 
       <p class="t">5 最后一点，做网站运维需要有探索创新精神，通过创新型思维解决现实中的问题，因为这是一个处于幼年的职业（国外也一样，但比国内起步早点），没有成熟体系或方法论可以借鉴，只能靠大家自已摸索努力</p> 
       <p class="t">对于网站运维，感觉大家还是比较迷惘与不解，确实，这是一个新兴岗位；近来闲而无事，在此结合自已以往的一些经历，与大家先共同探讨一下“什么是门户网站运维”？ 以下是自已的一些经验和感受请大家斧正，希望和大家一起探讨，共同进步。</p> 
       <p class="t">51CTO编辑推荐：SA，神仙与装机男：运维的工作到底啥样儿？</p> 
       <p class="t">一、什么是门户网站运维?</p> 
       <p class="t">首先明确一下，全文所讲的”运维“是指：门户网站应用运维，与其它<a href="http://m.ttfanwen.com/info/fw_642536.html" title="运维管理员如何写好一份年终总结" target="_blank">运维如</a>网络、系统的区别还是蛮大的；然后我们再对大型网站与小型网站进行范围定义，此定义主要从运维复杂性角度考虑，如网站规范、知名度、服务器量级、pv量等考虑，其它因素不是重点；因此，我们先定义服务器规模大于1000台，pv每天至少上千万（至少国内排名前20），如sina、alibaba、sohu、baidu、网易等等。</p> 
       <p class="t">其它小型网站可能没有真正意义上的运维工程师，这与网站规范不够和成本因素有关，更多的是集合网络、系统、开发工作于一身的“复合性人才”，就如本版有些同僚将公司的合同采购都纳入了运维职责范围，还有如IDC网络规划也纳入运维职责，这是网络工程师的工作，我们就不要抢人家饭碗了，但是，有件事非常重要一定需要明白：网站应用运维对其它关联工种必须非常了解熟悉：网络运维、系统运维、应用开发、内容；但这些非自已的本职工作，我在这里所讲的运维工程师就是指专职应用运维工程师。 我们再来说说一个般产品的“出生”流程：</p> 
       <p class="t">1、首先公司BOSS层给出指导思想，PM定位市场需求（或copy成熟应用）进行调研、分析、最终给出详细设计</p> 
       <p class="t">2、开发工程师将设计code实现出来、测试工程师对应用进行测试（同一产品事业部）</p> 
       <p class="t">3、网络\系统工程师根据产品设计的需求，如pv大小预估、服务器规模、应用架构等因素完成网络规划及设备上的调整（基本上对网络变动不大，除非大项目）、SA系统工程师负责产品服务器上架准备工作，服务器系统安装、网络、IP、通用工具集安装</p> 
       <p class="t">4、好，到运维工程师出马了。</p> 
       <p class="t">首先明确一点不是说前三步就与运维工作无关了，恰恰相反，前三步与运维关系很大：应用的前期架构设计、软/硬件资源评估申请采购、应用设计性能隐患及评估、IDC、服务性能\安全调优、服务器系统级优化（与特定应用有关）等都需运维全程参与，并主导整个应用上线项目；运维工程师需要对上线的应用系统架构是否合理、是否具备可扩展性、及安全隐患等因素负责，并负责最后将产品（程序）、网络、系统三者进行拼接并最优化的组合在一起，最终完成产品上线提供用户使用，并周而复使：需求-&gt;开发（升级）-&gt;测试-&gt;上线（性能、安全问题等之前预估外的问题随之慢慢就全出来了）在这里提一点：网站开发模式与传统软件开发完全不一样，网站一天开发上线1~5个升级版本是家常便饭，用户体验为王嘛，如果某个线上问题像M$需要1年解决，用户早跑光了。</p> 
       <p class="t">应用上线后，运维工作才刚开始，具体工作可能包括：升级版本上线工作、服务监控、应用状态统计、日常服务状态巡检、突发故障处理、服务日常变更调整、集群管理、服务性能评估优化、数据库管理优化（大于50台）、随着应用PV增减进行应用架构的伸缩、安全、运维开发工作：</p> 
       <p class="t">a 、尽量将日常机械性手工工作通过工具实现（如服务监控、应用状态统计、服务上线等等），提高效率 b 、解决现实中服务存在的问题，如高可靠性、可扩展性问题等，</p> 
       <p class="t">c、大规模集群管理工具的开发，如1万台机器如何在1分钟内完成密码修改、或运行指定任务？2000台服务器如何快速安装操作系统？各分布式IDC、存储集群中数BT级的数据如何快速的存储、共享、分析？等一系列挑战都需运维工程师的努力。</p> 
       <p class="t">在此说明一下其它配合工种情况，在整个项目中，前端应用对于网络/系统工程师来说是黑匣子，同时开发工程师职责只是负责完成应用的功能性开发，并对应用本身性能、安全性等应用本身负责，它不负责或关心网络/系统架构方面事宜，当然软/硬件采购人员等事业部其它同事也不会关心这些问题，各司其职，但项目的核心是运维工程师~！所有其它部门的桥梁</p> 
       <p class="t">上面说了很多，我想大家应该对运维有一些概念了，在此打个比方吧，如果我们是一辆高速行驶在高速公路上的汽车，那运维工程师就是司机兼维修工，这个司机不简单，有时需要在高速行驶过程中换轮胎、并根据道路情况换档位、当汽车速度越来越快，汽车本身不能满足高速度时对汽车性能调优或零件升级、高速行进中解决汽车故障及性能问题、时刻关注前方安全问题，并先知先觉的采取规避手段??这就是运维工作~！</p> 
       <p class="t">最后说一下运维工程师的职责：“确保线上稳定”，看似简单，但实属不容易。运维工程师必须在诸多不利因素中进行权衡：新产品模式对现有架构及技术的冲击、产品高频度的升级带来的线上BUG隐患、运维自动化管理承度不高导致的人为失误、IT行业追求的高效率导致流程执行上的缺失、用户增涨带来的性能及架构上的压力、IT行业宽松的技术管理文化、创新风险、互联网安全性问题等因素，都会是网站稳定的</p> 
       <p class="t">大敌，运维工程师必须把控好这最后一关，需具体高度的责任感、原则性及协调能力，如果能做到各因素的最佳平衡，那就是一名优秀的运维工程师了。</p> 
       <p class="t">另外在此聊点题外话，我在本版看到有很多人要sina、网易、sohu、baidu等聊自已的运维方面的经验，其实这对于它们有点免为其难：</p> 
       <p class="t">a、各公司自已网络架构、规模、或多或少还算是公司的核心秘密，要保密；另外，对于大家所熟知的通用软件、架构，由于很多公司会根据自已实际业务需要，同时因为原版性能、安全性、已知bug、功能等原因，进行过二次开发（如apache,php,mysql...），操作系统内核也会根据不同业务类型进行定制的，如某些应用属于运算型、某些是高IO型、或大储存大内存型??根据这些特点进行内核优化定制，如sina就在memcache上进行过二次开发，搞出了一个memcache DB，具体做得如何我们不谈，但开源了，是值得称赞的，国内公司对于开源基本上是索取，没有贡献；另外，服务器也不是大家所熟知的型号，根据业务特点，大部份都是找DELL/HP/sun/ibm进行过定制；另外，在分布式储存方面都有自已解决方案，要不就是使用现成开源hadoop等解决方案，或自已开发。但90%都是借鉴google GFS的思想:分布式存储、计算、大表。</p> 
       <p class="t">b、各公司业务方向不一样，会导致运维模式或方法都不一样，如alibaba和baidu运维肯定区别很大，因为他们业务模式决定了其架构、服务器量级、IDC分布、网络结构、通用技术都会不一样，主打新闻门户的sina与主打网游的盛大运维模式差异就非常大,甚至职责都不大一样；但有一点，通用技术及大致架构上都大同小异，大家不要太神化，更多的公司只是玩垒积木的游戏罢了，没什么技术含量。</p> 
       <p class="t">c、如我上面所讲，目前门户网站运维还处于幼年时期理念和经验都比较零散，没有成熟的知识体系，我相信大家也讲不出所以然来（我现在也中抓破脑袋挤出这点字，呵呵），可能具体什么是运维，大家都要先思索一番，或压根没想过，真正讨论也只是运维工作的冰山一角，局限于具体技术细节，或某某著名网站大的框架，真正运维体系化东西没有，这也许是目前网上运维相关资料比较少的原故吧。</p> 
       <p class="t">五、运维关键技术点解剖</p> 
       <p class="t">1、 大规模集群管理问题</p> 
       <p class="t">首先我们先要明确集群的概念，集群不是泛指各功能服务器的总合，而是指为了达到某一目的或功能的服务器、硬盘资源的整合（机器数大于两台），对于应用来说它就是一个整体，目前常规集群可分为：高可用性集群（HA），负载均衡集群（如lvs），分布式储、计算存储集群（DFS，如google gfs ,yahoo hadoop），特定应用集群（某一特定功能服务器组合、如db、cache层等），目前互联网行业主要基于这四种类型；对于前两种类似，如果业务简单、应用上post操作比较少，可以简单的采用四层交换机解决（如f5、foundly），达到服务高可用/负责均衡的作用，对于资源紧张的公司也有一些开源解决办法如lvs+ha,非常灵活；对于后两种，那就考验公司技术实力及应用特点了，第三种DFS主要应用于海量数据应用上，如邮件、搜索等应用，特别是搜索要求就更高了，除了简单海量存储，还包括数据挖掘、用户行为分析；如google、yahoo就能保存分析近一年的用户记录数据，而baidu应该少于30天、soguo就更少了。。。这些对于搜索准备性、及用户体验是至关重要的。</p> 
       <p class="t">接下来，我们再谈谈如何科学的管理集群，有以下关键几点：</p> 
       <p class="t">I、监控</p> 
       <p class="t">主要包括故障监控和性能、流量、负载等状态监控，这些监控关系到集群的健康运行，及潜在问题的及时发现与干预；</p> 
       <p class="t">a、服务故障、状态监控：主要是对服务器自身、上层应用、关联服务数据交互监控；例如针对前端web server，我们就可以有很多种类型的监控，包括应用端口状态监控，便于及时发现服务器或应用本身是否crash、通过icmp包探测服务器健康状态，更上层可能还包括应用各频道业务的监控，常用方法是采用面业特征码进行判断，或对重点页面进行签名，以网站被黑篡改（报警、并自动恢复被篡改数据）。。。这些只是一部份，还有N多监控方式，依应用特点而定，还有一些问题需解决，如集群过大，如何高性能的进行监控也是一个现实问题。。。。。</p> 
       <p class="t">b、其它就是集群状态类的监控或统计，为我们合理管理调优集群提供数据参考、包括服务瓶颈、性能问题、异常流量、攻击等问题</p> 
       <p class="t">II、故障管理</p> 
       <p class="t">a、硬件故障问题；对于成百上千或上万机器的N多集群，服务器死机、硬件故障概率是非常大的，几乎每时每刻都有服务硬件问题，死机、硬盘损坏、电源、内存、交换机。。。针对这种情况，我们在设计网站架构时需要充分考虑到这些问题，并将其视为常态；更多的依靠应用的冗余机制来规避这种风险，但给系统工程师足够宽裕的处理时间。（如google不是号称同时死800台机器，服务不会受到任何影响吗）；这就是考验运维工程师及网站架构师功能的地方了，好的设计能达到google所描述自恢复能力，如gfs，糟糕的设计那就是一台服务器的死机可能会造成大面积服务的连锁故障反映，直接对用户拒绝响应。</p> 
       <p class="t">b、应用故障问题；可能是某一bug被触发、或某一性能阀值被超越、攻击。。。情况不一而定，但重要的一点，是要有对这些问题的预防性措施，不能想当然，它不会出问题，如真出问题了，如何应对? 这需要运维工程师平时做足功夫，包括应急响应速度、故障处理的科学性、备用方案的有效等</p> 
       <p class="t">III、自动化</p> 
       <p class="t">自动化：简而言之，就是将我们日常手动进行的一些工作通过工具，系统自动来完成，解放我们的双手及枯燥的重复性劳动，例如：没有工具前，我们安装系统需要一台一台裸机安装，如2000台，可能需要10人/10天，搞烂N张光盘，人力成本更大。。。而现在通过自动化工具，只需几个简单命令就能搞定、还有如机器人类程序，自动完成以往每天人工干预的工作，使其自动完成、汇报结果，并具备一定的专家系统能力，能做一些简单的是/非判断、优化选择等。。。这些好处非常明显不再多说。。。应该说，自动化运维是运维工程师职业化的一个追求，利私利公，虽然这是一个异常艰巨的任务：不断变更的业务、不规范化的应用设计、开发模式、网络架构变更、IDC变更、规范变动等因素，都可能会对现有自动化系统产生影响，所以需要模块化、接口化、变因参数化等。。。。。。因此，自动化相关工作，是运维工程师的核心重点工作之一，也是价值的体现</p> 
       <p class="t">2 大并发网站的设计</p> 
       <p class="t">网站架构设计中，非常重要的一个要素，就是确保架构的可扩展性、这是高并发网站的基石。往往，一个网站的大流量不是与生具来的，而是有一个积累过程~~最后变成巨无霸，包括google、yahoo这种全球流量大户，而在这个成长过程中所积累的经验才是最值得我们学习的，包括思考方式、问题解决、改进过程。</p> 
       <p class="t">没有最好的架构设计方案，只有更好。。。，因此在此不会给大家一个终极方案。。。，在此介绍的这些经验，更多的是让大家真正掌握架构设计方法、理念、灵魂，并真正的能利用到实际中。为了让大家更易理解，我在此主题讨论中将会借用本版”jiang2798 “贴的&quot;google架构、youtube架构&quot;等经典案例和大家分析一下，再谈谈一些通用性原则及技巧。</p> 
       <p class="t">高并发架构需满足的一些因素、要点：</p> 
       <p class="t">I负载均衡架构</p> 
       <p class="t">首先网站前端需要采用负载均衡群集解决用户高并发的响应，目前常用方法包括</p> 
       <p class="t">a、squid反向代理，这也是各大网站常用的方法，包括sohu、sina...；</p> 
       <p class="t">b、DNS轮循；</p> 
       <p class="t">c、采四层硬件设备，包括google、baidu使用这种方式。。。对于lvs，小频道或不重要应用可以尝试使用，对于大流量、实时性要求高的网站目前还不成熟。</p> 
       <p class="t">II 高性能中间件选择、优化</p> 
       <p class="t">中间件选择、优化非常重要，当服务流量大于一定承度时，性能的稍微提升，对于整体硬件成本控制、服务的整体性能提升都是非常可观的。对于web server 目前常用的属apache，但apache 多进程(线程池)架构有一些缺点，进程频繁生成\注销系统开销大，特别当流量大时更是明显，对于应用逻辑简单的可以考虑lighttpd 采用单进程+epoll并发模式，效率高，但对多CPU支持有问题，但可采用启多服务解决这个问题；如果由于应用架构原因必须使用apache，可考虑apache module 性能比普通CGI成倍提升。。。其它原则，包括各中间件各版本测试、包括性能、安全上的考良，找到平衡点，不要太关注某一点因素，导致整体架构上出现隐患，另外一点非常重要，那就中间件的参数优化，这些方面大家可以google、baidu上找找，比较多，但有个原则那就是需要根据服务器实际资源情况进行优化，如httpd最大进程数设多大合适呢？有些朋友，就随手来个2048，觉得这样肯定不会再出现httpd由于进程阀值过低导致拒绝服务，但这有个隐患，因为生成进程，是需要硬件资源的，当进程数达到一定承度，可能服务器内存会溢出，导致服务器crash，特别是内存消耗量大的应用。。。这样的案例很多，需谨记</p> 
       <p class="t">III扩展性问题</p> 
       <p class="t">扩展性对于高速发展期间的网站非常重要，大家可以经常在网上看到某某网站的发展励途，那简直就是一部进化史，过程曲折而痛苦~~。因此成熟的经验就非常重要了，扩展性可以从两个方面来看：网络系统上的扩展性及应用本身的扩展性，首先在网络上需层次分明，尽量扁平化，全网冗余不能存在故障点，尽量按业务类型进行划分网络结构(pv大小、优先级)防止互扰，重要的一点：网络设计中，简单就是美~~，在不影响扩展性的前提下，不要搞得太复杂；网络硬件资源、机架位、IDC都需提前至少半年进行规划，这些规划的重要依据是公司业务发展的前景评估，这就体现公司的战略眼光了，包括是否需要外地IDC（依用户群体而定）。。。；另外，选一个好点的IDC是非常必要的，否则就得疲于IDC迁移了，北京地区好IDC还是不少的：皂君庙（有点老了。）、土城、联通、酒仙桥、爱立信、互联世纪、奥运官方机房数字北京据说马上也能入驻了。。。当然了，有钱也能像google一样自已搞个IDC，国内谁有这个实力?</p> 
       <p class="t">另一点就是应用本身的扩展性了，原则其实很简单，应用设计时应尽量确保应用的层次化、采用高性能的中间件、逻辑复杂及大数据量交互的功能尽量做成独立模块\后台、cache层、数据库分层（读/写操作分离），不要图前期简单直接将功能全部揉进前端CGI中，这很致命，随时都可能会遇到性能瓶颈、而且毫无扩展性。。。</p> 
       <p class="t">当以上两点很好的解决后，现在唯一的问题就是每半年根据业务的PV增涨、新业务发展，预购服务器了??；当然了，对现有架构优化，性能提升才是根本解决之道，特别是现在全球经济不景气，大家都不好过，这就是运维工程师的责任了，优化再优化~~</p> 
       <p class="t">IV应用设计、开发中的注意点</p> 
       <p class="t">架构层设计好后，应用层设计就是我们重点关注对象了，这也是一个项目成功的关键，好的设计主要体现在：性能(高并发承载能力)、可扩展性、可维护、安全性（数据完整性、应用稳定性、前端应用安全如SQL注入）、模块冗余、负载均衡等等，技术点：线程池、epoll、TCP(长/短)连接的选择、功能模块的细化及后台化、模块冗余/负载均衡考虑(可扩展性)、高频数据cache缓存、数据分层、应用单故障点的解决(数据唯一性问题)等。有两点要注意：</p> 
       <p class="t">1、应用设计时要允分考虑服务器、硬件设备甚基于IDC的不可靠性；也就是说我们在应用设计时需要考虑到应用运行过程中，随时都可能会有1~2台服务器或更多服务器出现故障情况(网络故障、灾难、攻击、停电((整个IDC全挂)))，如google GFS就是一个典型，我们不能将应用的稳定性寄托于硬件的稳定上，特别是门户型公司大部份采用的都是X86普通机型，服务器crash是家常便饭、随时随刻(当总量到一定量级时)，所以我们在做应用架构设计时需允分考虑这些问题发生时的对策，做到允分的冗余/负载均衡（这两点可统一），如多IDC间通过智能CDN的流控、单IDC应用模块多节点冗余/负载均衡等，即使某些应用由于特殊原因无法做到这点，也需允分考虑应急预案。。好的设计在这些突发情况下可以做到不用人工干预，当然难度也很大。。。记得前年李开复在北大演讲时说过：google一个IDC同时故障800台机器，不会影响到任何应用的正常响应（有点怀疑，可能是他挑选的某类服务器，呵呵）</p> 
       <p class="t">2、大流量应用/模块中能不使用数据库就不要使用数据库。</p> 
       <p class="t">（本部分内容缺失，包括V 数据库问题；VI 用户分地域优化；3 高可靠性问题解决）</p> 
       <p class="t">4 网站安全问题</p> 
       <p class="t">网站安全是一个系统性工作，影响安全的因素也很多，如DDOS（最常见的）、应用漏洞、系统层面漏洞、内部安全流程漏洞等（人为失误），可以从以下几方面着手考虑:</p> 
       <p class="t">1、网络层</p> 
       <p class="t">首先在网络设计时需考虑到安全因素；在主干出口处，对非业务端口进行屏蔽（如非80端口全部屏蔽），对于非常规数据包进行限速，如icmp，udp等，但是需考虑主干设备性能，不能因为安全限制导致设备性能明显下降，需要做到平衡，否则又会出现一个新的隐患点；另一方面就是主干带宽要足够富余，做到冗余互备（vrrp、hsrp），以抵抗DDOS的所带来的带宽消耗（对于大型网站DOS随时都存在，只是规模大小不一样），另外，现在部份4~7l硬件具有一定的syn 代理功能，可以抵御一定规模的flood，但主要还得拼资源、带宽、硬件性能；另外，需做好主干数据镜像分析，对于一些有规律的攻击定位到特征、甚至是</p> 
       <p class="t">攻击源，进行针对性的防御。对于公司重点业务可以在网络层进行物理隔离，增强关键性业务的健壮性，甚至是将业务冗余分布至不同IDC，做到跨地域容灾（如地震）</p> 
       <p class="t">2、系统层</p> 
       <p class="t">系统层主要是操作系统安全加固、系统安全BUG解决、对非业务端口进行屏蔽、非业务软件清除、跟踪系统工具软件最新安全动态，并做到及时更新。特别是直接对外提供服务的服务器（处于外网），更需做好定期安全审查评估，由于一般公司服务器内网都是相通过，攻占一台外网机器可能会导致公司整个内网全暴露，很恐怖</p> 
       <p class="t">3、应用层面</p> 
       <p class="t">应用方面安全就不多说了，主要是开发细节上需把好关，不留逻辑上的漏洞，并对上传接口严格控制、越界检查、SQL安全性考虑等，特别是对于用户具备上传接口的应用（如mail、bbs、blog、云计算等应用），漏洞是很多的；系统应用，如中间件也需做好相应的安全配置。。。不多说了，大家上网能馊到一大堆。需要多关注网上关于自身网站安全漏洞方面的信息（或定期搜索），因为往往应用上的漏洞，都是用户先发现的，用户是最好的测试人员，发现后需第一时间修复，并对同类业务进行全面排查；对于特定重点页面也可以进行监控，并采用程序自动恢复主要页面（功能上如有问题，可显示业务升级提示），以免应用被攻破后对公司形象造成影响</p> 
       <p class="t">4、内网安全管理</p> 
       <p class="t">对于日常内网准入方面需有严格流程，统一入口，技术方面如vpn、rsa,securID（如sina就用的动态密钥）等，没有条件的也需定期更新入口密码</p> 
       <p class="t">5、安全巡查</p> 
       <p class="t">偶尔由于人为失误会导致一些漏洞的出现，如由于工作需要临时变更了某些安全参数，但忘记开启。。。这个问题其实是最大的，往往出问题也多是人为失误，需要定期对全网关键安全点进行巡查；而且这也是404审计的一个重点，想必在sohu、sina、网易等美国上市公司里做安全的兄弟应该很有感触吧</p> 
       <p> </p>
       <div class="page-bar clear"> 
        <ul> 
         <li><a class="page-this" href="http://m.ttfanwen.com/info_7/fw_1401423.html">1</a></li> 
         <li><a href="http://m.ttfanwen.com/info_1/fw_862432.html">2</a></li> 
         <li><a href="http://m.ttfanwen.com/info_10/fw_2377648.html">3</a></li> 
         <li><a href="http://m.ttfanwen.com/info/fw_706090.html">4</a></li> 
         <li><a href="http://m.ttfanwen.com/info_10/fw_2344415.html">5</a></li> 
        </ul> 
       </div>
       <p> </p> 
       <script language="javascript">dy('bd_m_cnt_top_2');</script> 
       <b><font style="background:#999999;color:white">＋</font> 更多类似范文</b>
       <br />┣&nbsp;
       <a href="http://m.ttfanwen.com/info/fw_703806.html" target="_blank">逃离故障的十条运维工作经验总结 2300字</a>
       <br />┣&nbsp;
       <a href="http://m.ttfanwen.com/info_1/fw_862432.html" target="_blank">一个萝卜一个坑：短网址开发运维经验总结分享 2800字</a>
       <br />┣&nbsp;
       <a href="http://m.ttfanwen.com/info_7/fw_1401423.html" target="_blank">linux服务器故障之运维经验总结 3600字</a>
       <br />┣&nbsp;
       <a href="http://m.ttfanwen.com/info_5/fw_1211160.html" target="_blank">浅谈高压输电线路运行与维护的经验总结 2700字</a>
       <br />┣&nbsp;更多
       <a href="http://m.ttfanwen.com/yunweijingyanzongjie/" target="_blank">运维经验总结</a>
       <br />┗&nbsp;
       <a href="http://s.ttfanwen.com/cse/search?s=3336552705011913426&amp;q6=m.ttfanwen.com&amp;q=运维经验" rel="nofollow" target="_blank">搜索类似范文</a> 
       <script language="javascript">dy('bd_m_cnt_top_4');</script> 
      </div> 
     </div> 
     <div class="w-neirong"> 
      <div class="w-Tw">
       <b>相关推荐</b>
      </div> 
      <ul> 
       <li> <a href="http://m.ttfanwen.com/info_1/fw_805132.html"><span class="title">维修经验总结1800字</span></a> <p class="block"> <a href="http://m.ttfanwen.com/info_1/fw_805132.html">1、软件系统与硬件系统不兼容，GHOST恢复完后电脑重启出现错误对话框或者蓝屏、解决方法：解决方法：换过不同版的GHOST版的系统…</a> </p> </li> 
       <li> <a href="http://m.ttfanwen.com/info_3/fw_1030984.html"><span class="title">空调维修经验总结4300字</span></a> <p class="block"> <a href="http://m.ttfanwen.com/info_3/fw_1030984.html">空调维修经验总结空调器由制冷系统和电气系统组成,它的运行壮态又与工作环境和条件有密切的关系,所以对空调器的故障分析需要综和考lu,…</a> </p> </li> 
       <li> <a href="http://m.ttfanwen.com/info/fw_723357.html"><span class="title">手机维修经验总结2500字</span></a> <p class="block"> <a href="http://m.ttfanwen.com/info/fw_723357.html">每次看到别人维修铺那里放着一块万用表，我笑了，为什么呢，因为万用表的笔比元器件都粗，怎么检测其好坏，只能用示波器来检测，所以那个只…</a> </p> </li> 
      </ul> 
     </div> 
     <div class="w-tuijian"> 
      <h3><span>专栏推荐</span></h3> 
      <ul class="w-mingzi"> 
       <li><a href="http://m.ttfanwen.com/yunweijingyanzongjie/"><span><font class="w-Name">运维经验总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/weixiujingyanzongjie/"><span><font class="w-Name">维修经验总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/weihujingyanzongjie/"><span><font class="w-Name">维护经验总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/weixiudiangongjingyanzongjie/"><span><font class="w-Name">维修电工经验总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/wangluoweihujingyanzongjie/"><span><font class="w-Name">网络维护经验总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/bianpinqiweixiujingyanzongjie/"><span><font class="w-Name">变频器维修经验总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/yunweizongjie/"><span><font class="w-Name">运维总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/jingyanzongjie/"><span><font class="w-Name">经验总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/mishukezhanggongzuozongjie/"><span><font class="w-Name">秘书科长工作总结</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/zilumingyan/"><span><font class="w-Name">子路名言</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/cepingpingyu/"><span><font class="w-Name">测评评语</font></span></a></li> 
       <li><a href="http://m.ttfanwen.com/mianshizongjiepingjia/"><span><font class="w-Name">面试总结评价</font></span></a></li> 
      </ul> 
     </div> 
    </div> 
    <div class="w-navbottom"> 
     <ul> 
      <li><a href="http://m.ttfanwen.com/gerenjihua/">个人计划</a></li> 
      <li><a href="http://m.ttfanwen.com/gongzuobaogao/">工作报告</a></li> 
      <li><a href="http://m.ttfanwen.com/gongzuohuibao/">工作汇报</a></li> 
      <li><a href="http://m.ttfanwen.com/gongzuozongjie/">工作总结</a></li> 
      <li><a href="http://m.ttfanwen.com/hecidaquan/">贺词大全</a></li> 
      <li><a href="http://m.ttfanwen.com/huiyijilu_1/">会议记录</a></li> 
      <li><a href="http://m.ttfanwen.com/huojiangganyan/">获奖感言</a></li> 
      <li><a href="http://m.ttfanwen.com/xindetihui/">心得体会</a></li> 
     </ul> 
    </div> 
    <div class="w-foot"> 
     <span class="w-copyright"> <a href="http://www.ttfanwen.com/info_25/fw_3793807.html" title="运维经验" class="smdesktop w-pc" rel="nofollow">电脑看范文</a><code style="display: none;"><script>zztj();</script></code> </span> 
    </div> 
   </div>   
  </div>
 </body>
</html>